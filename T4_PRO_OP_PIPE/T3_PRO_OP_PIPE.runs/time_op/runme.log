
*** Running vivado
    with args -log TOP.vdi -applog -m64 -product Vivado -messageDb vivado.pb -mode batch -source TOP.tcl -notrace



****** Vivado v2021.1 (64-bit)
  **** SW Build 3247384 on Thu Jun 10 19:36:33 MDT 2021
  **** IP Build 3246043 on Fri Jun 11 00:30:35 MDT 2021
    ** Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.

source TOP.tcl -notrace
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1700] Loaded user IP repository 'c:/Users/juan_/Documents/FPGA/IPs/eucDistHW_512'.
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository 'C:/Xilinx/Vivado/2021.1/data/ip'.
WARNING: [IP_Flow 19-4995] The host OS only allows 260 characters in a normal path. The IP cache path is more than 80 characters. If you experience issues with IP caching, please consider changing the IP cache to a location with a shorter path. Alternately consider using the OS subst command to map part of the path to a drive letter. 
Current IP cache path is C:/Users/juan_/Documents/FPGA/JA-RM-IPD432/T4_PRO_OP_PIPE/T3_PRO_OP_PIPE.cache/ip 
Command: link_design -top TOP -part xc7a100tcsg324-1
Design is defaulting to srcset: sources_1
Design is defaulting to constrset: constrs_1
INFO: [Device 21-403] Loading part xc7a100tcsg324-1
Netlist sorting complete. Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.861 . Memory (MB): peak = 1129.574 ; gain = 0.000
INFO: [Netlist 29-17] Analyzing 10009 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2021.1
INFO: [Project 1-570] Preparing netlist for logic optimization
Parsing XDC File [C:/Users/juan_/Documents/FPGA/JA-RM-IPD432/T4_PRO_OP_PIPE/T3_PRO_OP_PIPE.srcs/constrs_1/new/Nexys-4-DDR-Master.xdc]
Finished Parsing XDC File [C:/Users/juan_/Documents/FPGA/JA-RM-IPD432/T4_PRO_OP_PIPE/T3_PRO_OP_PIPE.srcs/constrs_1/new/Nexys-4-DDR-Master.xdc]
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.026 . Memory (MB): peak = 1129.574 ; gain = 0.000
INFO: [Project 1-111] Unisim Transformation Summary:
No Unisim elements were transformed.

10 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
link_design completed successfully
link_design: Time (s): cpu = 00:00:24 ; elapsed = 00:00:25 . Memory (MB): peak = 1129.574 ; gain = 0.000
Command: opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7a100t'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7a100t'
Running DRC as a precondition to command opt_design

Starting DRC Task
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Project 1-461] DRC finished with 0 Errors
INFO: [Project 1-462] Please refer to the DRC report (report_drc) for more information.

Time (s): cpu = 00:00:03 ; elapsed = 00:00:01 . Memory (MB): peak = 1129.574 ; gain = 0.000

Starting Cache Timing Information Task
INFO: [Timing 38-35] Done setting XDC timing constraints.
Ending Cache Timing Information Task | Checksum: 14b55ff5e

Time (s): cpu = 00:00:14 ; elapsed = 00:00:12 . Memory (MB): peak = 1643.574 ; gain = 514.000

Starting Logic Optimization Task

Phase 1 Retarget
INFO: [Opt 31-138] Pushed 1 inverter(s) to 2 load pin(s).
INFO: [Opt 31-49] Retargeted 0 cell(s).
Phase 1 Retarget | Checksum: c497f7a5

Time (s): cpu = 00:00:07 ; elapsed = 00:00:05 . Memory (MB): peak = 1884.145 ; gain = 0.336
INFO: [Opt 31-389] Phase Retarget created 1755 cells and removed 1755 cells

Phase 2 Constant propagation
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Phase 2 Constant propagation | Checksum: d8ff32ba

Time (s): cpu = 00:00:10 ; elapsed = 00:00:09 . Memory (MB): peak = 1884.145 ; gain = 0.336
INFO: [Opt 31-389] Phase Constant propagation created 4760 cells and removed 8975 cells

Phase 3 Sweep
Phase 3 Sweep | Checksum: 145305333

Time (s): cpu = 00:00:12 ; elapsed = 00:00:11 . Memory (MB): peak = 1884.145 ; gain = 0.336
INFO: [Opt 31-389] Phase Sweep created 0 cells and removed 3 cells

Phase 4 BUFG optimization
Phase 4 BUFG optimization | Checksum: 145305333

Time (s): cpu = 00:00:14 ; elapsed = 00:00:12 . Memory (MB): peak = 1884.145 ; gain = 0.336
INFO: [Opt 31-662] Phase BUFG optimization created 0 cells of which 0 are BUFGs and removed 0 cells.

Phase 5 Shift Register Optimization
INFO: [Opt 31-1064] SRL Remap converted 0 SRLs to 0 registers and converted 0 registers of register chains to 0 SRLs
Phase 5 Shift Register Optimization | Checksum: 145305333

Time (s): cpu = 00:00:14 ; elapsed = 00:00:12 . Memory (MB): peak = 1884.145 ; gain = 0.336
INFO: [Opt 31-389] Phase Shift Register Optimization created 0 cells and removed 0 cells

Phase 6 Post Processing Netlist
Phase 6 Post Processing Netlist | Checksum: 145305333

Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1884.145 ; gain = 0.336
INFO: [Opt 31-389] Phase Post Processing Netlist created 0 cells and removed 0 cells
Opt_design Change Summary
=========================


-------------------------------------------------------------------------------------------------------------------------
|  Phase                        |  #Cells created  |  #Cells Removed  |  #Constrained objects preventing optimizations  |
-------------------------------------------------------------------------------------------------------------------------
|  Retarget                     |            1755  |            1755  |                                              0  |
|  Constant propagation         |            4760  |            8975  |                                              0  |
|  Sweep                        |               0  |               3  |                                              0  |
|  BUFG optimization            |               0  |               0  |                                              0  |
|  Shift Register Optimization  |               0  |               0  |                                              0  |
|  Post Processing Netlist      |               0  |               0  |                                              0  |
-------------------------------------------------------------------------------------------------------------------------



Starting Connectivity Check Task

Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.203 . Memory (MB): peak = 1884.145 ; gain = 0.000
Ending Logic Optimization Task | Checksum: 205a80377

Time (s): cpu = 00:00:19 ; elapsed = 00:00:17 . Memory (MB): peak = 1884.145 ; gain = 0.336

Starting Power Optimization Task
INFO: [Pwropt 34-132] Skipping clock gating for clocks with a period < 2.00 ns.
Ending Power Optimization Task | Checksum: 205a80377

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.055 . Memory (MB): peak = 1884.145 ; gain = 0.000

Starting Final Cleanup Task
Ending Final Cleanup Task | Checksum: 205a80377

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 1884.145 ; gain = 0.000

Starting Netlist Obfuscation Task
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.025 . Memory (MB): peak = 1884.145 ; gain = 0.000
Ending Netlist Obfuscation Task | Checksum: 205a80377

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.025 . Memory (MB): peak = 1884.145 ; gain = 0.000
INFO: [Common 17-83] Releasing license: Implementation
27 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
opt_design completed successfully
opt_design: Time (s): cpu = 00:00:38 ; elapsed = 00:00:33 . Memory (MB): peak = 1884.145 ; gain = 754.570
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.043 . Memory (MB): peak = 1884.145 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'C:/Users/juan_/Documents/FPGA/JA-RM-IPD432/T4_PRO_OP_PIPE/T3_PRO_OP_PIPE.runs/time_op/TOP_opt.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:14 ; elapsed = 00:00:10 . Memory (MB): peak = 1884.145 ; gain = 0.000
Command: place_design -directive ExtraTimingOpt
Attempting to get a license for feature 'Implementation' and/or device 'xc7a100t'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7a100t'
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.
Running DRC as a precondition to command place_design
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.

Starting Placer Task
INFO: [Place 46-5] The placer was invoked with the 'ExtraTimingOpt' directive.
INFO: [Place 30-611] Multithreading enabled for place_design using a maximum of 2 CPUs

Phase 1 Placer Initialization

Phase 1.1 Placer Initialization Netlist Sorting
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.024 . Memory (MB): peak = 1935.586 ; gain = 0.000
Phase 1.1 Placer Initialization Netlist Sorting | Checksum: 16e840abc

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.050 . Memory (MB): peak = 1935.586 ; gain = 0.000
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.022 . Memory (MB): peak = 1935.586 ; gain = 0.000

Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device
Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device | Checksum: 11beda21d

Time (s): cpu = 00:00:04 ; elapsed = 00:00:03 . Memory (MB): peak = 1935.586 ; gain = 0.000

Phase 1.3 Build Placer Netlist Model
Phase 1.3 Build Placer Netlist Model | Checksum: 216ad6701

Time (s): cpu = 00:00:23 ; elapsed = 00:00:15 . Memory (MB): peak = 2217.500 ; gain = 281.914

Phase 1.4 Constrain Clocks/Macros
Phase 1.4 Constrain Clocks/Macros | Checksum: 216ad6701

Time (s): cpu = 00:00:23 ; elapsed = 00:00:16 . Memory (MB): peak = 2217.500 ; gain = 281.914
Phase 1 Placer Initialization | Checksum: 216ad6701

Time (s): cpu = 00:00:23 ; elapsed = 00:00:16 . Memory (MB): peak = 2217.500 ; gain = 281.914

Phase 2 Global Placement

Phase 2.1 Floorplanning
Phase 2.1 Floorplanning | Checksum: 18e872e4b

Time (s): cpu = 00:00:31 ; elapsed = 00:00:20 . Memory (MB): peak = 2217.500 ; gain = 281.914

Phase 2.2 Update Timing before SLR Path Opt
Phase 2.2 Update Timing before SLR Path Opt | Checksum: 216c4391c

Time (s): cpu = 00:00:37 ; elapsed = 00:00:24 . Memory (MB): peak = 2217.500 ; gain = 281.914

Phase 2.3 Post-Processing in Floorplanning
Phase 2.3 Post-Processing in Floorplanning | Checksum: 216c4391c

Time (s): cpu = 00:00:37 ; elapsed = 00:00:24 . Memory (MB): peak = 2217.500 ; gain = 281.914

Phase 2.4 Global Placement Core

Phase 2.4.1 Physical Synthesis In Placer
INFO: [Physopt 32-1035] Found 0 LUTNM shape to break, 7507 LUT instances to create LUTNM shape
INFO: [Physopt 32-1044] Break lutnm for timing: one critical 0, two critical 0, total 0, new lutff created 0
INFO: [Physopt 32-1138] End 1 Pass. Optimized 3446 nets or LUTs. Breaked 0 LUT, combined 3446 existing LUTs and moved 0 existing LUT
INFO: [Physopt 32-76] Pass 1. Identified 3 candidate nets for fanout optimization.
INFO: [Physopt 32-81] Processed net PROCC/inst/ap_CS_fsm_pp0_stage0. Replicated 7 times.
INFO: [Physopt 32-81] Processed net UARTRXLOGIC/FSMRX/addra[7]. Replicated 8 times.
INFO: [Physopt 32-81] Processed net UARTRXLOGIC/FSMRX/addra[8]. Replicated 7 times.
INFO: [Physopt 32-232] Optimized 3 nets. Created 44 new instances.
INFO: [Physopt 32-775] End 1 Pass. Optimized 3 nets or cells. Created 44 new cells, deleted 0 existing cell and moved 0 existing cell
Netlist sorting complete. Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.264 . Memory (MB): peak = 2217.500 ; gain = 0.000
INFO: [Physopt 32-670] No setup violation found.  DSP Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  Shift Register to Pipeline Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  Shift Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  BRAM Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  URAM Register Optimization was not performed.
INFO: [Physopt 32-949] No candidate nets found for dynamic/static region interface net replication
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.027 . Memory (MB): peak = 2217.500 ; gain = 0.000

Summary of Physical Synthesis Optimizations
============================================


-----------------------------------------------------------------------------------------------------------------------------------------------------------
|  Optimization                                     |  Added Cells  |  Removed Cells  |  Optimized Cells/Nets  |  Dont Touch  |  Iterations  |  Elapsed   |
-----------------------------------------------------------------------------------------------------------------------------------------------------------
|  LUT Combining                                    |            0  |           3446  |                  3446  |           0  |           1  |  00:00:04  |
|  Retime                                           |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  Very High Fanout                                 |           44  |              0  |                     3  |           0  |           1  |  00:00:02  |
|  DSP Register                                     |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  Shift Register to Pipeline                       |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  Shift Register                                   |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  BRAM Register                                    |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  URAM Register                                    |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  Dynamic/Static Region Interface Net Replication  |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  Total                                            |           44  |           3446  |                  3449  |           0  |           4  |  00:00:05  |
-----------------------------------------------------------------------------------------------------------------------------------------------------------


Phase 2.4.1 Physical Synthesis In Placer | Checksum: 2366c2cd8

Time (s): cpu = 00:01:51 ; elapsed = 00:01:10 . Memory (MB): peak = 2217.500 ; gain = 281.914
Phase 2.4 Global Placement Core | Checksum: 25a5d5c71

Time (s): cpu = 00:01:54 ; elapsed = 00:01:12 . Memory (MB): peak = 2217.500 ; gain = 281.914
Phase 2 Global Placement | Checksum: 25a5d5c71

Time (s): cpu = 00:01:54 ; elapsed = 00:01:12 . Memory (MB): peak = 2217.500 ; gain = 281.914

Phase 3 Detail Placement

Phase 3.1 Commit Multi Column Macros
Phase 3.1 Commit Multi Column Macros | Checksum: 2405da31c

Time (s): cpu = 00:02:03 ; elapsed = 00:01:18 . Memory (MB): peak = 2217.500 ; gain = 281.914

Phase 3.2 Commit Most Macros & LUTRAMs
Phase 3.2 Commit Most Macros & LUTRAMs | Checksum: 2089f8ab1

Time (s): cpu = 00:02:22 ; elapsed = 00:01:31 . Memory (MB): peak = 2217.500 ; gain = 281.914

Phase 3.3 Area Swap Optimization
Phase 3.3 Area Swap Optimization | Checksum: 1e7479ecf

Time (s): cpu = 00:02:23 ; elapsed = 00:01:32 . Memory (MB): peak = 2217.500 ; gain = 281.914

Phase 3.4 Pipeline Register Optimization
Phase 3.4 Pipeline Register Optimization | Checksum: 24a052365

Time (s): cpu = 00:02:23 ; elapsed = 00:01:32 . Memory (MB): peak = 2217.500 ; gain = 281.914

Phase 3.5 Fast Optimization
Phase 3.5 Fast Optimization | Checksum: 1cbcfe2a6

Time (s): cpu = 00:02:35 ; elapsed = 00:01:39 . Memory (MB): peak = 2217.500 ; gain = 281.914

Phase 3.6 Small Shape Detail Placement
Phase 3.6 Small Shape Detail Placement | Checksum: 222dd2ea0

Time (s): cpu = 00:02:51 ; elapsed = 00:01:57 . Memory (MB): peak = 2217.500 ; gain = 281.914

Phase 3.7 Re-assign LUT pins
Phase 3.7 Re-assign LUT pins | Checksum: 19abbee88

Time (s): cpu = 00:02:55 ; elapsed = 00:02:02 . Memory (MB): peak = 2217.500 ; gain = 281.914

Phase 3.8 Pipeline Register Optimization
Phase 3.8 Pipeline Register Optimization | Checksum: 1aaa144db

Time (s): cpu = 00:02:56 ; elapsed = 00:02:02 . Memory (MB): peak = 2217.500 ; gain = 281.914
Phase 3 Detail Placement | Checksum: 1aaa144db

Time (s): cpu = 00:02:56 ; elapsed = 00:02:03 . Memory (MB): peak = 2217.500 ; gain = 281.914

Phase 4 Post Placement Optimization and Clean-Up

Phase 4.1 Post Commit Optimization
INFO: [Timing 38-35] Done setting XDC timing constraints.

Phase 4.1.1 Post Placement Optimization
Post Placement Optimization Initialization | Checksum: 11e3c2d4e

Phase 4.1.1.1 BUFG Insertion

Starting Physical Synthesis Task

Phase 1 Physical Synthesis Initialization
INFO: [Physopt 32-721] Multithreading enabled for phys_opt_design using a maximum of 2 CPUs
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=-0.503 | TNS=-23.947 |
Phase 1 Physical Synthesis Initialization | Checksum: 161b8148d

Time (s): cpu = 00:00:04 ; elapsed = 00:00:02 . Memory (MB): peak = 2233.594 ; gain = 0.000
INFO: [Place 46-56] BUFG insertion identified 0 candidate nets. Inserted BUFG: 0, Replicated BUFG Driver: 0, Skipped due to Placement/Routing Conflicts: 0, Skipped due to Timing Degradation: 0, Skipped due to Illegal Netlist: 0.
Ending Physical Synthesis Task | Checksum: 1274ef08d

Time (s): cpu = 00:00:06 ; elapsed = 00:00:03 . Memory (MB): peak = 2233.594 ; gain = 0.000
Phase 4.1.1.1 BUFG Insertion | Checksum: 11e3c2d4e

Time (s): cpu = 00:03:26 ; elapsed = 00:02:24 . Memory (MB): peak = 2233.594 ; gain = 298.008

Phase 4.1.1.2 Post Placement Timing Optimization
INFO: [Place 30-746] Post Placement Timing Summary WNS=0.264. For the most accurate timing information please run report_timing.
Phase 4.1.1.2 Post Placement Timing Optimization | Checksum: 17dfc61ab

Time (s): cpu = 00:04:00 ; elapsed = 00:02:48 . Memory (MB): peak = 2233.594 ; gain = 298.008

Time (s): cpu = 00:04:00 ; elapsed = 00:02:48 . Memory (MB): peak = 2233.594 ; gain = 298.008
Phase 4.1 Post Commit Optimization | Checksum: 17dfc61ab

Time (s): cpu = 00:04:00 ; elapsed = 00:02:49 . Memory (MB): peak = 2233.594 ; gain = 298.008

Phase 4.2 Post Placement Cleanup
Phase 4.2 Post Placement Cleanup | Checksum: 17dfc61ab

Time (s): cpu = 00:04:01 ; elapsed = 00:02:49 . Memory (MB): peak = 2233.594 ; gain = 298.008

Phase 4.3 Placer Reporting

Phase 4.3.1 Print Estimated Congestion
INFO: [Place 30-612] Post-Placement Estimated Congestion 
 ____________________________________________________
|           | Global Congestion | Short Congestion  |
| Direction | Region Size       | Region Size       |
|___________|___________________|___________________|
|      North|                1x1|                2x2|
|___________|___________________|___________________|
|      South|                1x1|                2x2|
|___________|___________________|___________________|
|       East|                1x1|                1x1|
|___________|___________________|___________________|
|       West|                1x1|                1x1|
|___________|___________________|___________________|

Phase 4.3.1 Print Estimated Congestion | Checksum: 17dfc61ab

Time (s): cpu = 00:04:01 ; elapsed = 00:02:50 . Memory (MB): peak = 2233.594 ; gain = 298.008
Phase 4.3 Placer Reporting | Checksum: 17dfc61ab

Time (s): cpu = 00:04:02 ; elapsed = 00:02:50 . Memory (MB): peak = 2233.594 ; gain = 298.008

Phase 4.4 Final Placement Cleanup
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.027 . Memory (MB): peak = 2233.594 ; gain = 0.000

Time (s): cpu = 00:04:02 ; elapsed = 00:02:50 . Memory (MB): peak = 2233.594 ; gain = 298.008
Phase 4 Post Placement Optimization and Clean-Up | Checksum: 1429e979d

Time (s): cpu = 00:04:02 ; elapsed = 00:02:51 . Memory (MB): peak = 2233.594 ; gain = 298.008
Ending Placer Task | Checksum: f0bb0390

Time (s): cpu = 00:04:02 ; elapsed = 00:02:51 . Memory (MB): peak = 2233.594 ; gain = 298.008
INFO: [Common 17-83] Releasing license: Implementation
62 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
place_design completed successfully
place_design: Time (s): cpu = 00:04:26 ; elapsed = 00:03:04 . Memory (MB): peak = 2233.594 ; gain = 349.449
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:16 ; elapsed = 00:00:06 . Memory (MB): peak = 2233.594 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'C:/Users/juan_/Documents/FPGA/JA-RM-IPD432/T4_PRO_OP_PIPE/T3_PRO_OP_PIPE.runs/time_op/TOP_placed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:22 ; elapsed = 00:00:13 . Memory (MB): peak = 2233.594 ; gain = 0.000
Command: phys_opt_design -directive Explore
Attempting to get a license for feature 'Implementation' and/or device 'xc7a100t'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7a100t'
INFO: [Vivado_Tcl 4-137] Directive used for phys_opt_design is: Explore
INFO: [Vivado_Tcl 4-383] Design worst setup slack (WNS) is greater than or equal to 0.000 ns. Skipping all physical synthesis optimizations.
INFO: [Vivado_Tcl 4-232] No setup violation found. The netlist was not modified.
INFO: [Common 17-83] Releasing license: Implementation
69 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
phys_opt_design completed successfully
phys_opt_design: Time (s): cpu = 00:00:25 ; elapsed = 00:00:14 . Memory (MB): peak = 2233.594 ; gain = 0.000
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:19 ; elapsed = 00:00:07 . Memory (MB): peak = 2239.227 ; gain = 5.633
INFO: [Common 17-1381] The checkpoint 'C:/Users/juan_/Documents/FPGA/JA-RM-IPD432/T4_PRO_OP_PIPE/T3_PRO_OP_PIPE.runs/time_op/TOP_physopt.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:25 ; elapsed = 00:00:14 . Memory (MB): peak = 2239.227 ; gain = 5.633
Command: route_design -directive NoTimingRelaxation
Attempting to get a license for feature 'Implementation' and/or device 'xc7a100t'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7a100t'
Running DRC as a precondition to command route_design
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.


Starting Routing Task
INFO: [Route 35-270] Using Router directive 'NoTimingRelaxation'.
INFO: [Route 35-254] Multithreading enabled for route_design using a maximum of 2 CPUs
Checksum: PlaceDB: c9e23722 ConstDB: 0 ShapeSum: 26d8cc6e RouteDB: 0

Phase 1 Build RT Design
Phase 1 Build RT Design | Checksum: 106a8613a

Time (s): cpu = 00:00:41 ; elapsed = 00:00:28 . Memory (MB): peak = 2373.824 ; gain = 61.391
Post Restoration Checksum: NetGraph: 3ad0fe36 NumContArr: cbd76304 Constraints: 0 Timing: 0

Phase 2 Router Initialization

Phase 2.1 Create Timer
Phase 2.1 Create Timer | Checksum: 106a8613a

Time (s): cpu = 00:00:42 ; elapsed = 00:00:29 . Memory (MB): peak = 2373.824 ; gain = 61.391

Phase 2.2 Fix Topology Constraints
Phase 2.2 Fix Topology Constraints | Checksum: 106a8613a

Time (s): cpu = 00:00:43 ; elapsed = 00:00:30 . Memory (MB): peak = 2377.383 ; gain = 64.949

Phase 2.3 Pre Route Cleanup
Phase 2.3 Pre Route Cleanup | Checksum: 106a8613a

Time (s): cpu = 00:00:43 ; elapsed = 00:00:30 . Memory (MB): peak = 2377.383 ; gain = 64.949
 Number of Nodes with overlaps = 0

Phase 2.4 Update Timing
Phase 2.4 Update Timing | Checksum: 12a57e477

Time (s): cpu = 00:01:15 ; elapsed = 00:00:51 . Memory (MB): peak = 2439.797 ; gain = 127.363
INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.595  | TNS=0.000  | WHS=-0.129 | THS=-29.623|

Phase 2 Router Initialization | Checksum: 1cbd768fb

Time (s): cpu = 00:01:33 ; elapsed = 00:01:03 . Memory (MB): peak = 2769.824 ; gain = 457.391

Router Utilization Summary
  Global Vertical Routing Utilization    = 4.35218e-05 %
  Global Horizontal Routing Utilization  = 0.000142086 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 83362
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 83361
  Number of Partially Routed Nets     = 1
  Number of Node Overlaps             = 0


Phase 3 Initial Routing

Phase 3.1 Global Routing
Phase 3.1 Global Routing | Checksum: 1cbd768fb

Time (s): cpu = 00:01:34 ; elapsed = 00:01:03 . Memory (MB): peak = 2769.824 ; gain = 457.391
Phase 3 Initial Routing | Checksum: 117219395

Time (s): cpu = 00:01:56 ; elapsed = 00:01:16 . Memory (MB): peak = 2769.824 ; gain = 457.391

Phase 4 Rip-up And Reroute

Phase 4.1 Global Iteration 0
 Number of Nodes with overlaps = 10528
 Number of Nodes with overlaps = 1407
 Number of Nodes with overlaps = 307
 Number of Nodes with overlaps = 77
 Number of Nodes with overlaps = 17
 Number of Nodes with overlaps = 8
 Number of Nodes with overlaps = 2
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=-0.010 | TNS=-0.010 | WHS=N/A    | THS=N/A    |

Phase 4.1 Global Iteration 0 | Checksum: af482349

Time (s): cpu = 00:03:29 ; elapsed = 00:02:19 . Memory (MB): peak = 2769.824 ; gain = 457.391

Phase 4.2 Global Iteration 1
 Number of Nodes with overlaps = 57
 Number of Nodes with overlaps = 23
 Number of Nodes with overlaps = 9
 Number of Nodes with overlaps = 4
 Number of Nodes with overlaps = 4
 Number of Nodes with overlaps = 1
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.083  | TNS=0.000  | WHS=N/A    | THS=N/A    |

Phase 4.2 Global Iteration 1 | Checksum: 10f7eca6d

Time (s): cpu = 00:03:42 ; elapsed = 00:02:33 . Memory (MB): peak = 2769.824 ; gain = 457.391
Phase 4 Rip-up And Reroute | Checksum: 10f7eca6d

Time (s): cpu = 00:03:43 ; elapsed = 00:02:33 . Memory (MB): peak = 2769.824 ; gain = 457.391

Phase 5 Delay and Skew Optimization

Phase 5.1 Delay CleanUp
Phase 5.1 Delay CleanUp | Checksum: 10f7eca6d

Time (s): cpu = 00:03:43 ; elapsed = 00:02:33 . Memory (MB): peak = 2769.824 ; gain = 457.391

Phase 5.2 Clock Skew Optimization
Phase 5.2 Clock Skew Optimization | Checksum: 10f7eca6d

Time (s): cpu = 00:03:43 ; elapsed = 00:02:34 . Memory (MB): peak = 2769.824 ; gain = 457.391
Phase 5 Delay and Skew Optimization | Checksum: 10f7eca6d

Time (s): cpu = 00:03:43 ; elapsed = 00:02:34 . Memory (MB): peak = 2769.824 ; gain = 457.391

Phase 6 Post Hold Fix

Phase 6.1 Hold Fix Iter

Phase 6.1.1 Update Timing
Phase 6.1.1 Update Timing | Checksum: ded3c736

Time (s): cpu = 00:03:50 ; elapsed = 00:02:38 . Memory (MB): peak = 2769.824 ; gain = 457.391
INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.083  | TNS=0.000  | WHS=0.035  | THS=0.000  |

Phase 6.1 Hold Fix Iter | Checksum: 11bf6347a

Time (s): cpu = 00:03:50 ; elapsed = 00:02:38 . Memory (MB): peak = 2769.824 ; gain = 457.391
Phase 6 Post Hold Fix | Checksum: 11bf6347a

Time (s): cpu = 00:03:50 ; elapsed = 00:02:39 . Memory (MB): peak = 2769.824 ; gain = 457.391

Phase 7 Route finalize

Router Utilization Summary
  Global Vertical Routing Utilization    = 17.3661 %
  Global Horizontal Routing Utilization  = 18.4149 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 0
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 0
  Number of Partially Routed Nets     = 0
  Number of Node Overlaps             = 0

Phase 7 Route finalize | Checksum: 1998c1ae6

Time (s): cpu = 00:03:51 ; elapsed = 00:02:39 . Memory (MB): peak = 2769.824 ; gain = 457.391

Phase 8 Verifying routed nets

 Verification completed successfully
Phase 8 Verifying routed nets | Checksum: 1998c1ae6

Time (s): cpu = 00:03:51 ; elapsed = 00:02:39 . Memory (MB): peak = 2769.824 ; gain = 457.391

Phase 9 Depositing Routes
Phase 9 Depositing Routes | Checksum: 14016c5c1

Time (s): cpu = 00:03:59 ; elapsed = 00:02:47 . Memory (MB): peak = 2769.824 ; gain = 457.391

Phase 10 Post Router Timing
INFO: [Route 35-20] Post Routing Timing Summary | WNS=0.083  | TNS=0.000  | WHS=0.035  | THS=0.000  |

Phase 10 Post Router Timing | Checksum: f57a059f

Time (s): cpu = 00:04:30 ; elapsed = 00:03:04 . Memory (MB): peak = 2769.824 ; gain = 457.391
INFO: [Route 35-61] The design met the timing requirement.
INFO: [Route 35-16] Router Completed Successfully

Time (s): cpu = 00:04:31 ; elapsed = 00:03:04 . Memory (MB): peak = 2769.824 ; gain = 457.391

Routing Is Done.
INFO: [Common 17-83] Releasing license: Implementation
85 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
route_design completed successfully
route_design: Time (s): cpu = 00:04:44 ; elapsed = 00:03:12 . Memory (MB): peak = 2769.824 ; gain = 530.598
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:18 ; elapsed = 00:00:08 . Memory (MB): peak = 2769.824 ; gain = 0.000
report_design_analysis: Time (s): cpu = 00:00:08 ; elapsed = 00:00:08 . Memory (MB): peak = 2769.824 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'C:/Users/juan_/Documents/FPGA/JA-RM-IPD432/T4_PRO_OP_PIPE/T3_PRO_OP_PIPE.runs/time_op/TOP_routed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:31 ; elapsed = 00:00:21 . Memory (MB): peak = 2769.824 ; gain = 0.000
Command: write_bitstream -force TOP.bit
Attempting to get a license for feature 'Implementation' and/or device 'xc7a100t'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7a100t'
Running DRC as a precondition to command write_bitstream
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U258/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U258/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U259/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U259/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U260/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U260/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U261/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U261/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U262/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U262/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U263/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U263/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U264/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U264/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U265/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U265/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U266/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U266/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U267/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U267/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U268/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U268/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U269/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U269/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U270/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U270/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U271/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U271/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U272/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U272/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U273/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U273/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U274/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U274/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U275/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U275/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U276/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U276/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U277/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U277/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U278/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U278/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U279/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U279/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U280/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U280/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U281/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U281/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U282/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U282/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U283/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U283/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U284/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U284/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U285/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U285/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U286/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U286/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U287/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U287/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U288/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U288/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U289/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U289/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U290/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U290/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U291/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U291/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U292/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U292/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U293/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U293/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U294/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U294/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U295/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U295/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U296/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U296/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U297/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U297/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U298/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U298/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U299/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U299/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U300/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U300/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U301/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U301/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U302/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U302/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U303/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U303/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U304/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U304/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U305/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U305/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U306/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U306/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U307/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U307/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U308/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U308/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U309/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U309/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U310/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U310/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U311/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U311/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U312/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U312/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U313/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U313/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U314/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U314/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U315/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U315/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U316/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U316/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U317/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U317/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U318/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U318/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U319/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U319/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U320/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U320/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U321/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U321/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U322/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U322/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U323/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U323/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U324/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U324/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U325/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U325/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U326/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U326/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U327/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U327/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U328/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U328/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U329/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U329/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U330/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U330/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U331/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U331/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U332/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U332/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U333/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U333/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U334/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U334/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U335/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U335/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U336/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U336/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U337/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U337/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U338/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U338/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U339/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U339/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U340/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U340/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U341/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U341/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U342/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U342/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U343/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U343/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U344/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U344/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U345/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U345/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U346/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U346/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U347/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U347/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U348/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U348/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U349/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U349/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U350/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U350/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U351/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U351/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U352/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U352/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U353/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U353/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U354/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U354/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U355/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U355/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U356/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U356/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U357/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg multiplier stage PROCC/inst/mac_muladd_9s_9s_18s_18_4_1_U357/eucHW_mac_muladd_9s_9s_18s_18_4_1_DSP48_0_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
INFO: [Common 17-14] Message 'DRC DPOP-2' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
INFO: [Vivado 12-3199] DRC finished with 0 Errors, 120 Warnings
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
INFO: [Designutils 20-2272] Running write_bitstream with 2 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Creating bitmap...
Creating bitstream...
Writing bitstream ./TOP.bit...
INFO: [Vivado 12-1842] Bitgen Completed Successfully.
INFO: [#UNDEF] WebTalk data collection is mandatory when using a WebPACK part without a full Vivado license. To see the specific WebTalk data collected for your design, open the usage_statistics_webtalk.html or usage_statistics_webtalk.xml file in the implementation directory.
INFO: [Common 17-186] 'C:/Users/juan_/Documents/FPGA/JA-RM-IPD432/T4_PRO_OP_PIPE/T3_PRO_OP_PIPE.runs/time_op/usage_statistics_webtalk.xml' has been successfully sent to Xilinx on Fri Mar 18 01:10:33 2022. For additional details about this file, please refer to the WebTalk help file at C:/Xilinx/Vivado/2021.1/doc/webtalk_introduction.html.
INFO: [Common 17-83] Releasing license: Implementation
98 Infos, 101 Warnings, 0 Critical Warnings and 0 Errors encountered.
write_bitstream completed successfully
write_bitstream: Time (s): cpu = 00:01:16 ; elapsed = 00:00:50 . Memory (MB): peak = 2838.348 ; gain = 68.523
INFO: [Common 17-206] Exiting Vivado at Fri Mar 18 01:10:33 2022...
