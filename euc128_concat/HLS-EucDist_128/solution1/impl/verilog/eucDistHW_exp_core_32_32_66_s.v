// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module eucDistHW_exp_core_32_32_66_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [40:0] x;
output  [30:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_pp0_stage0_subdone;
wire   [7:0] f_x_msb_4_table_V_address0;
reg    f_x_msb_4_table_V_ce0;
wire   [31:0] f_x_msb_4_table_V_q0;
wire   [7:0] f_x_msb_5_table_V_address0;
reg    f_x_msb_5_table_V_ce0;
wire   [15:0] f_x_msb_5_table_V_q0;
wire   [7:0] f_x_msb_3_table_V_address0;
reg    f_x_msb_3_table_V_ce0;
wire   [50:0] f_x_msb_3_table_V_q0;
wire   [7:0] f_x_msb_2_table_V_address0;
reg    f_x_msb_2_table_V_ce0;
wire   [63:0] f_x_msb_2_table_V_q0;
wire   [7:0] exp_x_msb_1_table_V_address0;
reg    exp_x_msb_1_table_V_ce0;
wire   [67:0] exp_x_msb_1_table_V_q0;
wire   [0:0] tmp_fu_237_p3;
reg   [0:0] tmp_reg_746;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] tmp_reg_746_pp0_iter1_reg;
reg   [0:0] tmp_reg_746_pp0_iter2_reg;
reg   [0:0] tmp_reg_746_pp0_iter3_reg;
reg   [0:0] tmp_reg_746_pp0_iter4_reg;
reg   [0:0] tmp_reg_746_pp0_iter5_reg;
reg   [0:0] tmp_reg_746_pp0_iter6_reg;
reg   [0:0] tmp_reg_746_pp0_iter7_reg;
reg   [0:0] tmp_reg_746_pp0_iter8_reg;
reg   [0:0] tmp_reg_746_pp0_iter9_reg;
reg   [0:0] tmp_reg_746_pp0_iter10_reg;
reg   [0:0] tmp_reg_746_pp0_iter11_reg;
reg   [0:0] tmp_reg_746_pp0_iter12_reg;
reg   [0:0] tmp_reg_746_pp0_iter13_reg;
reg   [0:0] tmp_reg_746_pp0_iter14_reg;
reg   [0:0] tmp_reg_746_pp0_iter15_reg;
reg   [0:0] tmp_reg_746_pp0_iter16_reg;
reg   [0:0] tmp_reg_746_pp0_iter17_reg;
reg   [0:0] tmp_reg_746_pp0_iter18_reg;
reg   [0:0] tmp_reg_746_pp0_iter19_reg;
reg   [0:0] tmp_reg_746_pp0_iter20_reg;
reg   [0:0] tmp_reg_746_pp0_iter21_reg;
reg   [0:0] tmp_reg_746_pp0_iter22_reg;
reg   [6:0] p_Result_s_103_reg_752;
reg   [6:0] p_Result_s_103_reg_752_pp0_iter1_reg;
reg   [6:0] p_Result_s_103_reg_752_pp0_iter2_reg;
reg   [6:0] p_Result_s_103_reg_752_pp0_iter3_reg;
reg   [6:0] p_Result_s_103_reg_752_pp0_iter4_reg;
reg   [6:0] p_Result_s_103_reg_752_pp0_iter5_reg;
reg   [6:0] p_Result_s_103_reg_752_pp0_iter6_reg;
reg   [6:0] p_Result_s_103_reg_752_pp0_iter7_reg;
reg   [6:0] p_Result_s_103_reg_752_pp0_iter8_reg;
reg   [6:0] p_Result_s_103_reg_752_pp0_iter9_reg;
reg   [6:0] p_Result_s_103_reg_752_pp0_iter10_reg;
reg   [6:0] p_Result_s_103_reg_752_pp0_iter11_reg;
reg   [6:0] p_Result_s_103_reg_752_pp0_iter12_reg;
reg   [6:0] p_Result_s_103_reg_752_pp0_iter13_reg;
reg   [6:0] p_Result_s_103_reg_752_pp0_iter14_reg;
reg   [6:0] p_Result_s_103_reg_752_pp0_iter15_reg;
reg   [7:0] tmp_52_reg_757;
reg   [7:0] tmp_52_reg_757_pp0_iter1_reg;
reg   [7:0] tmp_52_reg_757_pp0_iter2_reg;
reg   [7:0] tmp_52_reg_757_pp0_iter3_reg;
reg   [7:0] tmp_52_reg_757_pp0_iter4_reg;
reg   [7:0] tmp_52_reg_757_pp0_iter5_reg;
reg   [7:0] tmp_52_reg_757_pp0_iter6_reg;
reg   [7:0] tmp_52_reg_757_pp0_iter7_reg;
reg   [7:0] tmp_52_reg_757_pp0_iter8_reg;
reg   [7:0] tmp_52_reg_757_pp0_iter9_reg;
reg   [7:0] tmp_52_reg_757_pp0_iter10_reg;
reg   [7:0] tmp_53_reg_763;
reg   [7:0] tmp_53_reg_763_pp0_iter1_reg;
reg   [7:0] tmp_53_reg_763_pp0_iter2_reg;
reg   [7:0] tmp_53_reg_763_pp0_iter3_reg;
reg   [7:0] tmp_53_reg_763_pp0_iter4_reg;
reg   [7:0] tmp_53_reg_763_pp0_iter5_reg;
reg   [7:0] tmp_53_reg_763_pp0_iter6_reg;
reg   [7:0] tmp_53_reg_763_pp0_iter7_reg;
reg   [7:0] tmp_53_reg_763_pp0_iter8_reg;
reg   [7:0] tmp_53_reg_763_pp0_iter9_reg;
reg   [7:0] tmp_53_reg_763_pp0_iter10_reg;
wire   [7:0] tmp_54_fu_313_p4;
reg   [7:0] tmp_54_reg_770;
wire   [7:0] tmp_55_fu_323_p1;
reg   [7:0] tmp_55_reg_775;
reg   [7:0] tmp_55_reg_775_pp0_iter1_reg;
wire   [15:0] trunc_ln666_fu_332_p1;
reg   [15:0] trunc_ln666_reg_787;
reg   [15:0] trunc_ln666_reg_787_pp0_iter1_reg;
reg   [15:0] trunc_ln666_reg_787_pp0_iter2_reg;
reg   [15:0] trunc_ln666_reg_787_pp0_iter3_reg;
reg   [15:0] trunc_ln666_reg_787_pp0_iter4_reg;
reg   [15:0] trunc_ln666_reg_787_pp0_iter5_reg;
reg   [15:0] trunc_ln666_reg_787_pp0_iter6_reg;
reg   [15:0] trunc_ln666_reg_787_pp0_iter7_reg;
reg   [15:0] trunc_ln666_reg_787_pp0_iter8_reg;
reg   [15:0] trunc_ln666_reg_787_pp0_iter9_reg;
reg   [15:0] trunc_ln666_reg_787_pp0_iter10_reg;
wire   [0:0] or_ln1647_1_fu_342_p2;
reg   [0:0] or_ln1647_1_reg_793;
reg   [0:0] or_ln1647_1_reg_793_pp0_iter1_reg;
reg   [0:0] or_ln1647_1_reg_793_pp0_iter2_reg;
reg   [0:0] or_ln1647_1_reg_793_pp0_iter3_reg;
reg   [0:0] or_ln1647_1_reg_793_pp0_iter4_reg;
reg   [0:0] or_ln1647_1_reg_793_pp0_iter5_reg;
reg   [0:0] or_ln1647_1_reg_793_pp0_iter6_reg;
reg   [0:0] or_ln1647_1_reg_793_pp0_iter7_reg;
reg   [0:0] or_ln1647_1_reg_793_pp0_iter8_reg;
reg   [0:0] or_ln1647_1_reg_793_pp0_iter9_reg;
reg   [0:0] or_ln1647_1_reg_793_pp0_iter10_reg;
reg   [0:0] or_ln1647_1_reg_793_pp0_iter11_reg;
reg   [0:0] or_ln1647_1_reg_793_pp0_iter12_reg;
reg   [0:0] or_ln1647_1_reg_793_pp0_iter13_reg;
reg   [0:0] or_ln1647_1_reg_793_pp0_iter14_reg;
reg   [0:0] or_ln1647_1_reg_793_pp0_iter15_reg;
reg   [0:0] or_ln1647_1_reg_793_pp0_iter16_reg;
reg   [0:0] or_ln1647_1_reg_793_pp0_iter17_reg;
reg   [0:0] or_ln1647_1_reg_793_pp0_iter18_reg;
reg   [0:0] or_ln1647_1_reg_793_pp0_iter19_reg;
reg   [0:0] or_ln1647_1_reg_793_pp0_iter20_reg;
reg   [0:0] or_ln1647_1_reg_793_pp0_iter21_reg;
reg   [0:0] or_ln1647_1_reg_793_pp0_iter22_reg;
reg   [31:0] f_x_msb_4_V_reg_798;
reg   [31:0] f_x_msb_4_V_reg_798_pp0_iter2_reg;
reg   [31:0] f_x_msb_4_V_reg_798_pp0_iter3_reg;
reg   [31:0] f_x_msb_4_V_reg_798_pp0_iter4_reg;
reg   [15:0] f_x_msb_5_V_reg_829;
reg   [5:0] trunc_ln2_reg_834;
wire   [24:0] exp_x_msb_4_5_lsb_m_1_m4_V_fu_413_p2;
reg   [24:0] exp_x_msb_4_5_lsb_m_1_m4_V_reg_839;
wire   [32:0] exp_x_msb_4_5_lsb_m_1_m5_V_fu_429_p2;
reg   [32:0] exp_x_msb_4_5_lsb_m_1_m5_V_reg_849;
reg   [32:0] exp_x_msb_4_5_lsb_m_1_m5_V_reg_849_pp0_iter6_reg;
reg   [32:0] exp_x_msb_4_5_lsb_m_1_m5_V_reg_849_pp0_iter7_reg;
reg   [32:0] exp_x_msb_4_5_lsb_m_1_m5_V_reg_849_pp0_iter8_reg;
reg   [32:0] exp_x_msb_4_5_lsb_m_1_m5_V_reg_849_pp0_iter9_reg;
reg   [32:0] exp_x_msb_4_5_lsb_m_1_m5_V_reg_849_pp0_iter10_reg;
reg   [50:0] f_x_msb_3_V_reg_855;
reg   [50:0] f_x_msb_3_V_reg_855_pp0_iter6_reg;
reg   [50:0] f_x_msb_3_V_reg_855_pp0_iter7_reg;
reg   [50:0] f_x_msb_3_V_reg_855_pp0_iter8_reg;
reg   [50:0] f_x_msb_3_V_reg_855_pp0_iter9_reg;
reg   [50:0] f_x_msb_3_V_reg_855_pp0_iter10_reg;
reg   [38:0] tmp_34_reg_860;
reg   [43:0] tmp_50_reg_875;
wire   [62:0] exp_x_msb_3_4_5_lsb_m_1_V_fu_524_p2;
reg   [62:0] exp_x_msb_3_4_5_lsb_m_1_V_reg_885;
reg   [62:0] exp_x_msb_3_4_5_lsb_m_1_V_reg_885_pp0_iter12_reg;
reg   [62:0] exp_x_msb_3_4_5_lsb_m_1_V_reg_885_pp0_iter13_reg;
reg   [62:0] exp_x_msb_3_4_5_lsb_m_1_V_reg_885_pp0_iter14_reg;
reg   [62:0] exp_x_msb_3_4_5_lsb_m_1_V_reg_885_pp0_iter15_reg;
reg   [62:0] exp_x_msb_3_4_5_lsb_m_1_V_reg_885_pp0_iter16_reg;
wire   [8:0] ret_V_fu_547_p2;
reg   [8:0] ret_V_reg_891;
reg   [8:0] ret_V_reg_891_pp0_iter12_reg;
reg   [8:0] ret_V_reg_891_pp0_iter13_reg;
reg   [8:0] ret_V_reg_891_pp0_iter14_reg;
reg   [8:0] ret_V_reg_891_pp0_iter15_reg;
reg   [8:0] ret_V_reg_891_pp0_iter16_reg;
wire   [57:0] trunc_ln594_2_fu_553_p1;
reg   [57:0] trunc_ln594_2_reg_897;
reg   [57:0] trunc_ln594_2_reg_897_pp0_iter12_reg;
reg   [57:0] trunc_ln594_2_reg_897_pp0_iter13_reg;
reg   [57:0] trunc_ln594_2_reg_897_pp0_iter14_reg;
reg   [57:0] trunc_ln594_2_reg_897_pp0_iter15_reg;
reg   [57:0] trunc_ln594_2_reg_897_pp0_iter16_reg;
reg   [61:0] trunc_ln4_reg_913;
wire   [71:0] exp_x_msb_2_3_4_5_lsb_m_1_V_fu_625_p2;
reg   [71:0] exp_x_msb_2_3_4_5_lsb_m_1_V_reg_923;
reg   [67:0] exp_x_msb_1_V_reg_928;
reg   [67:0] exp_x_msb_1_V_reg_928_pp0_iter18_reg;
reg   [67:0] exp_x_msb_1_V_reg_928_pp0_iter19_reg;
reg   [67:0] exp_x_msb_1_V_reg_928_pp0_iter20_reg;
reg   [67:0] exp_x_msb_1_V_reg_928_pp0_iter21_reg;
reg   [67:0] exp_x_msb_1_V_reg_928_pp0_iter22_reg;
reg   [67:0] y_lo_s_V_reg_944;
wire   [63:0] y_V_1_fu_680_p3;
reg   [63:0] y_V_1_reg_949;
wire   [62:0] trunc_ln666_1_fu_687_p1;
reg   [62:0] trunc_ln666_1_reg_954;
wire   [63:0] zext_ln527_fu_327_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln527_2_fu_362_p1;
wire   [63:0] zext_ln527_3_fu_419_p1;
wire   [63:0] zext_ln527_4_fu_485_p1;
wire   [63:0] zext_ln527_5_fu_592_p1;
wire   [33:0] trunc_ln594_fu_225_p1;
wire   [0:0] tmp_45_fu_245_p3;
wire   [5:0] p_Result_s_fu_215_p4;
wire   [66:0] p_Result_102_fu_229_p3;
wire   [0:0] icmp_ln1505_fu_265_p2;
wire   [0:0] icmp_ln1503_fu_271_p2;
wire   [0:0] icmp_ln1501_fu_259_p2;
wire   [0:0] and_ln1647_fu_277_p2;
wire   [0:0] or_ln1647_fu_336_p2;
wire   [0:0] overf_fu_253_p2;
wire   [24:0] x_msb_5_lsb_V_fu_348_p3;
wire   [31:0] grp_fu_372_p0;
wire   [7:0] grp_fu_372_p1;
wire   [39:0] grp_fu_372_p2;
wire   [16:0] zext_ln294_fu_388_p1;
wire   [16:0] zext_ln666_fu_391_p1;
wire   [32:0] trunc_ln3_fu_400_p1;
wire  signed [32:0] grp_fu_739_p2;
wire   [16:0] exp_x_msb_4_5_lsb_m_1_m3_V_1_fu_394_p2;
wire   [24:0] trunc_ln3_fu_400_p4;
wire   [24:0] zext_ln666_7_fu_409_p1;
wire   [32:0] zext_ln294_1_fu_423_p1;
wire   [32:0] zext_ln666_8_fu_426_p1;
wire   [49:0] exp_x_msb_3_m_1_s_V_fu_453_p4;
wire   [50:0] tmp_s_fu_445_p4;
wire   [50:0] grp_fu_469_p0;
wire   [49:0] grp_fu_469_p1;
wire   [100:0] grp_fu_469_p2;
wire   [61:0] p_Result_104_fu_489_p4;
wire   [53:0] tmp_35_fu_504_p5;
wire   [62:0] zext_ln666_10_fu_500_p1;
wire   [62:0] zext_ln666_9_fu_497_p1;
wire   [62:0] add_ln666_fu_518_p2;
wire   [62:0] zext_ln666_11_fu_514_p1;
wire   [5:0] p_Result_105_fu_530_p4;
wire   [8:0] zext_ln666_13_fu_544_p1;
wire   [8:0] zext_ln666_12_fu_540_p1;
wire   [66:0] p_Result_106_fu_557_p3;
wire   [66:0] grp_fu_570_p0;
wire   [62:0] grp_fu_570_p1;
wire   [129:0] grp_fu_570_p2;
wire   [7:0] p_Result_103_fu_576_p3;
wire   [70:0] rhs_14_fu_600_p4;
wire   [63:0] zext_ln666_14_fu_612_p1;
wire   [63:0] zext_ln1199_fu_597_p1;
wire   [63:0] add_ln666_11_fu_615_p2;
wire   [71:0] zext_ln666_15_fu_621_p1;
wire   [71:0] zext_ln1199_5_fu_608_p1;
wire   [71:0] grp_fu_637_p0;
wire   [67:0] grp_fu_637_p1;
wire   [139:0] grp_fu_637_p2;
wire   [0:0] xor_ln1632_fu_653_p2;
wire   [67:0] y_l_V_fu_666_p2;
wire   [63:0] select_ln594_fu_658_p3;
wire   [63:0] y_V_fu_670_p4;
wire   [64:0] zext_ln1632_fu_691_p1;
wire   [64:0] p_Val2_45_fu_694_p2;
wire   [1:0] tmp_51_fu_705_p4;
wire   [62:0] add_ln58_fu_700_p2;
wire   [0:0] overf_1_fu_715_p2;
wire   [30:0] tmp_36_fu_721_p4;
wire   [24:0] grp_fu_739_p0;
wire   [7:0] grp_fu_739_p1;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to23;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [39:0] grp_fu_372_p00;
wire   [39:0] grp_fu_372_p10;
wire   [100:0] grp_fu_469_p00;
wire   [100:0] grp_fu_469_p10;
wire   [129:0] grp_fu_570_p00;
wire   [129:0] grp_fu_570_p10;
wire   [139:0] grp_fu_637_p00;
wire   [139:0] grp_fu_637_p10;
wire   [32:0] grp_fu_739_p00;
wire   [32:0] grp_fu_739_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
end

eucDistHW_exp_core_32_32_66_s_f_x_msb_4_table_V #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
f_x_msb_4_table_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(f_x_msb_4_table_V_address0),
    .ce0(f_x_msb_4_table_V_ce0),
    .q0(f_x_msb_4_table_V_q0)
);

eucDistHW_exp_core_32_32_66_s_f_x_msb_5_table_V #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
f_x_msb_5_table_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(f_x_msb_5_table_V_address0),
    .ce0(f_x_msb_5_table_V_ce0),
    .q0(f_x_msb_5_table_V_q0)
);

eucDistHW_exp_core_32_32_66_s_f_x_msb_3_table_V #(
    .DataWidth( 51 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
f_x_msb_3_table_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(f_x_msb_3_table_V_address0),
    .ce0(f_x_msb_3_table_V_ce0),
    .q0(f_x_msb_3_table_V_q0)
);

eucDistHW_exp_core_32_32_66_s_f_x_msb_2_table_V #(
    .DataWidth( 64 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
f_x_msb_2_table_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(f_x_msb_2_table_V_address0),
    .ce0(f_x_msb_2_table_V_ce0),
    .q0(f_x_msb_2_table_V_q0)
);

eucDistHW_exp_core_32_32_66_s_exp_x_msb_1_table_V #(
    .DataWidth( 68 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
exp_x_msb_1_table_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(exp_x_msb_1_table_V_address0),
    .ce0(exp_x_msb_1_table_V_ce0),
    .q0(exp_x_msb_1_table_V_q0)
);

eucDistHW_mul_32ns_8ns_40_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 40 ))
mul_32ns_8ns_40_2_1_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_372_p0),
    .din1(grp_fu_372_p1),
    .ce(1'b1),
    .dout(grp_fu_372_p2)
);

eucDistHW_mul_51ns_50ns_101_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 51 ),
    .din1_WIDTH( 50 ),
    .dout_WIDTH( 101 ))
mul_51ns_50ns_101_5_1_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_469_p0),
    .din1(grp_fu_469_p1),
    .ce(1'b1),
    .dout(grp_fu_469_p2)
);

eucDistHW_mul_67ns_63ns_130_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 67 ),
    .din1_WIDTH( 63 ),
    .dout_WIDTH( 130 ))
mul_67ns_63ns_130_5_1_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_570_p0),
    .din1(grp_fu_570_p1),
    .ce(1'b1),
    .dout(grp_fu_570_p2)
);

eucDistHW_mul_72ns_68ns_140_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 72 ),
    .din1_WIDTH( 68 ),
    .dout_WIDTH( 140 ))
mul_72ns_68ns_140_5_1_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_637_p0),
    .din1(grp_fu_637_p1),
    .ce(1'b1),
    .dout(grp_fu_637_p2)
);

eucDistHW_mul_mul_25ns_8ns_33_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 25 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 33 ))
mul_mul_25ns_8ns_33_4_1_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_739_p0),
    .din1(grp_fu_739_p1),
    .ce(1'b1),
    .dout(grp_fu_739_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln1647_1_reg_793_pp0_iter16_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exp_x_msb_1_V_reg_928 <= exp_x_msb_1_table_V_q0;
        exp_x_msb_2_3_4_5_lsb_m_1_V_reg_923 <= exp_x_msb_2_3_4_5_lsb_m_1_V_fu_625_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        exp_x_msb_1_V_reg_928_pp0_iter18_reg <= exp_x_msb_1_V_reg_928;
        exp_x_msb_1_V_reg_928_pp0_iter19_reg <= exp_x_msb_1_V_reg_928_pp0_iter18_reg;
        exp_x_msb_1_V_reg_928_pp0_iter20_reg <= exp_x_msb_1_V_reg_928_pp0_iter19_reg;
        exp_x_msb_1_V_reg_928_pp0_iter21_reg <= exp_x_msb_1_V_reg_928_pp0_iter20_reg;
        exp_x_msb_1_V_reg_928_pp0_iter22_reg <= exp_x_msb_1_V_reg_928_pp0_iter21_reg;
        exp_x_msb_3_4_5_lsb_m_1_V_reg_885_pp0_iter12_reg <= exp_x_msb_3_4_5_lsb_m_1_V_reg_885;
        exp_x_msb_3_4_5_lsb_m_1_V_reg_885_pp0_iter13_reg <= exp_x_msb_3_4_5_lsb_m_1_V_reg_885_pp0_iter12_reg;
        exp_x_msb_3_4_5_lsb_m_1_V_reg_885_pp0_iter14_reg <= exp_x_msb_3_4_5_lsb_m_1_V_reg_885_pp0_iter13_reg;
        exp_x_msb_3_4_5_lsb_m_1_V_reg_885_pp0_iter15_reg <= exp_x_msb_3_4_5_lsb_m_1_V_reg_885_pp0_iter14_reg;
        exp_x_msb_3_4_5_lsb_m_1_V_reg_885_pp0_iter16_reg <= exp_x_msb_3_4_5_lsb_m_1_V_reg_885_pp0_iter15_reg;
        exp_x_msb_4_5_lsb_m_1_m5_V_reg_849_pp0_iter10_reg <= exp_x_msb_4_5_lsb_m_1_m5_V_reg_849_pp0_iter9_reg;
        exp_x_msb_4_5_lsb_m_1_m5_V_reg_849_pp0_iter6_reg <= exp_x_msb_4_5_lsb_m_1_m5_V_reg_849;
        exp_x_msb_4_5_lsb_m_1_m5_V_reg_849_pp0_iter7_reg <= exp_x_msb_4_5_lsb_m_1_m5_V_reg_849_pp0_iter6_reg;
        exp_x_msb_4_5_lsb_m_1_m5_V_reg_849_pp0_iter8_reg <= exp_x_msb_4_5_lsb_m_1_m5_V_reg_849_pp0_iter7_reg;
        exp_x_msb_4_5_lsb_m_1_m5_V_reg_849_pp0_iter9_reg <= exp_x_msb_4_5_lsb_m_1_m5_V_reg_849_pp0_iter8_reg;
        f_x_msb_3_V_reg_855_pp0_iter10_reg <= f_x_msb_3_V_reg_855_pp0_iter9_reg;
        f_x_msb_3_V_reg_855_pp0_iter6_reg <= f_x_msb_3_V_reg_855;
        f_x_msb_3_V_reg_855_pp0_iter7_reg <= f_x_msb_3_V_reg_855_pp0_iter6_reg;
        f_x_msb_3_V_reg_855_pp0_iter8_reg <= f_x_msb_3_V_reg_855_pp0_iter7_reg;
        f_x_msb_3_V_reg_855_pp0_iter9_reg <= f_x_msb_3_V_reg_855_pp0_iter8_reg;
        f_x_msb_4_V_reg_798_pp0_iter2_reg <= f_x_msb_4_V_reg_798;
        f_x_msb_4_V_reg_798_pp0_iter3_reg <= f_x_msb_4_V_reg_798_pp0_iter2_reg;
        f_x_msb_4_V_reg_798_pp0_iter4_reg <= f_x_msb_4_V_reg_798_pp0_iter3_reg;
        or_ln1647_1_reg_793_pp0_iter10_reg <= or_ln1647_1_reg_793_pp0_iter9_reg;
        or_ln1647_1_reg_793_pp0_iter11_reg <= or_ln1647_1_reg_793_pp0_iter10_reg;
        or_ln1647_1_reg_793_pp0_iter12_reg <= or_ln1647_1_reg_793_pp0_iter11_reg;
        or_ln1647_1_reg_793_pp0_iter13_reg <= or_ln1647_1_reg_793_pp0_iter12_reg;
        or_ln1647_1_reg_793_pp0_iter14_reg <= or_ln1647_1_reg_793_pp0_iter13_reg;
        or_ln1647_1_reg_793_pp0_iter15_reg <= or_ln1647_1_reg_793_pp0_iter14_reg;
        or_ln1647_1_reg_793_pp0_iter16_reg <= or_ln1647_1_reg_793_pp0_iter15_reg;
        or_ln1647_1_reg_793_pp0_iter17_reg <= or_ln1647_1_reg_793_pp0_iter16_reg;
        or_ln1647_1_reg_793_pp0_iter18_reg <= or_ln1647_1_reg_793_pp0_iter17_reg;
        or_ln1647_1_reg_793_pp0_iter19_reg <= or_ln1647_1_reg_793_pp0_iter18_reg;
        or_ln1647_1_reg_793_pp0_iter20_reg <= or_ln1647_1_reg_793_pp0_iter19_reg;
        or_ln1647_1_reg_793_pp0_iter21_reg <= or_ln1647_1_reg_793_pp0_iter20_reg;
        or_ln1647_1_reg_793_pp0_iter22_reg <= or_ln1647_1_reg_793_pp0_iter21_reg;
        or_ln1647_1_reg_793_pp0_iter2_reg <= or_ln1647_1_reg_793_pp0_iter1_reg;
        or_ln1647_1_reg_793_pp0_iter3_reg <= or_ln1647_1_reg_793_pp0_iter2_reg;
        or_ln1647_1_reg_793_pp0_iter4_reg <= or_ln1647_1_reg_793_pp0_iter3_reg;
        or_ln1647_1_reg_793_pp0_iter5_reg <= or_ln1647_1_reg_793_pp0_iter4_reg;
        or_ln1647_1_reg_793_pp0_iter6_reg <= or_ln1647_1_reg_793_pp0_iter5_reg;
        or_ln1647_1_reg_793_pp0_iter7_reg <= or_ln1647_1_reg_793_pp0_iter6_reg;
        or_ln1647_1_reg_793_pp0_iter8_reg <= or_ln1647_1_reg_793_pp0_iter7_reg;
        or_ln1647_1_reg_793_pp0_iter9_reg <= or_ln1647_1_reg_793_pp0_iter8_reg;
        p_Result_s_103_reg_752_pp0_iter10_reg <= p_Result_s_103_reg_752_pp0_iter9_reg;
        p_Result_s_103_reg_752_pp0_iter11_reg <= p_Result_s_103_reg_752_pp0_iter10_reg;
        p_Result_s_103_reg_752_pp0_iter12_reg <= p_Result_s_103_reg_752_pp0_iter11_reg;
        p_Result_s_103_reg_752_pp0_iter13_reg <= p_Result_s_103_reg_752_pp0_iter12_reg;
        p_Result_s_103_reg_752_pp0_iter14_reg <= p_Result_s_103_reg_752_pp0_iter13_reg;
        p_Result_s_103_reg_752_pp0_iter15_reg <= p_Result_s_103_reg_752_pp0_iter14_reg;
        p_Result_s_103_reg_752_pp0_iter2_reg <= p_Result_s_103_reg_752_pp0_iter1_reg;
        p_Result_s_103_reg_752_pp0_iter3_reg <= p_Result_s_103_reg_752_pp0_iter2_reg;
        p_Result_s_103_reg_752_pp0_iter4_reg <= p_Result_s_103_reg_752_pp0_iter3_reg;
        p_Result_s_103_reg_752_pp0_iter5_reg <= p_Result_s_103_reg_752_pp0_iter4_reg;
        p_Result_s_103_reg_752_pp0_iter6_reg <= p_Result_s_103_reg_752_pp0_iter5_reg;
        p_Result_s_103_reg_752_pp0_iter7_reg <= p_Result_s_103_reg_752_pp0_iter6_reg;
        p_Result_s_103_reg_752_pp0_iter8_reg <= p_Result_s_103_reg_752_pp0_iter7_reg;
        p_Result_s_103_reg_752_pp0_iter9_reg <= p_Result_s_103_reg_752_pp0_iter8_reg;
        ret_V_reg_891_pp0_iter12_reg <= ret_V_reg_891;
        ret_V_reg_891_pp0_iter13_reg <= ret_V_reg_891_pp0_iter12_reg;
        ret_V_reg_891_pp0_iter14_reg <= ret_V_reg_891_pp0_iter13_reg;
        ret_V_reg_891_pp0_iter15_reg <= ret_V_reg_891_pp0_iter14_reg;
        ret_V_reg_891_pp0_iter16_reg <= ret_V_reg_891_pp0_iter15_reg;
        tmp_52_reg_757_pp0_iter10_reg <= tmp_52_reg_757_pp0_iter9_reg;
        tmp_52_reg_757_pp0_iter2_reg <= tmp_52_reg_757_pp0_iter1_reg;
        tmp_52_reg_757_pp0_iter3_reg <= tmp_52_reg_757_pp0_iter2_reg;
        tmp_52_reg_757_pp0_iter4_reg <= tmp_52_reg_757_pp0_iter3_reg;
        tmp_52_reg_757_pp0_iter5_reg <= tmp_52_reg_757_pp0_iter4_reg;
        tmp_52_reg_757_pp0_iter6_reg <= tmp_52_reg_757_pp0_iter5_reg;
        tmp_52_reg_757_pp0_iter7_reg <= tmp_52_reg_757_pp0_iter6_reg;
        tmp_52_reg_757_pp0_iter8_reg <= tmp_52_reg_757_pp0_iter7_reg;
        tmp_52_reg_757_pp0_iter9_reg <= tmp_52_reg_757_pp0_iter8_reg;
        tmp_53_reg_763_pp0_iter10_reg <= tmp_53_reg_763_pp0_iter9_reg;
        tmp_53_reg_763_pp0_iter2_reg <= tmp_53_reg_763_pp0_iter1_reg;
        tmp_53_reg_763_pp0_iter3_reg <= tmp_53_reg_763_pp0_iter2_reg;
        tmp_53_reg_763_pp0_iter4_reg <= tmp_53_reg_763_pp0_iter3_reg;
        tmp_53_reg_763_pp0_iter5_reg <= tmp_53_reg_763_pp0_iter4_reg;
        tmp_53_reg_763_pp0_iter6_reg <= tmp_53_reg_763_pp0_iter5_reg;
        tmp_53_reg_763_pp0_iter7_reg <= tmp_53_reg_763_pp0_iter6_reg;
        tmp_53_reg_763_pp0_iter8_reg <= tmp_53_reg_763_pp0_iter7_reg;
        tmp_53_reg_763_pp0_iter9_reg <= tmp_53_reg_763_pp0_iter8_reg;
        tmp_reg_746_pp0_iter10_reg <= tmp_reg_746_pp0_iter9_reg;
        tmp_reg_746_pp0_iter11_reg <= tmp_reg_746_pp0_iter10_reg;
        tmp_reg_746_pp0_iter12_reg <= tmp_reg_746_pp0_iter11_reg;
        tmp_reg_746_pp0_iter13_reg <= tmp_reg_746_pp0_iter12_reg;
        tmp_reg_746_pp0_iter14_reg <= tmp_reg_746_pp0_iter13_reg;
        tmp_reg_746_pp0_iter15_reg <= tmp_reg_746_pp0_iter14_reg;
        tmp_reg_746_pp0_iter16_reg <= tmp_reg_746_pp0_iter15_reg;
        tmp_reg_746_pp0_iter17_reg <= tmp_reg_746_pp0_iter16_reg;
        tmp_reg_746_pp0_iter18_reg <= tmp_reg_746_pp0_iter17_reg;
        tmp_reg_746_pp0_iter19_reg <= tmp_reg_746_pp0_iter18_reg;
        tmp_reg_746_pp0_iter20_reg <= tmp_reg_746_pp0_iter19_reg;
        tmp_reg_746_pp0_iter21_reg <= tmp_reg_746_pp0_iter20_reg;
        tmp_reg_746_pp0_iter22_reg <= tmp_reg_746_pp0_iter21_reg;
        tmp_reg_746_pp0_iter2_reg <= tmp_reg_746_pp0_iter1_reg;
        tmp_reg_746_pp0_iter3_reg <= tmp_reg_746_pp0_iter2_reg;
        tmp_reg_746_pp0_iter4_reg <= tmp_reg_746_pp0_iter3_reg;
        tmp_reg_746_pp0_iter5_reg <= tmp_reg_746_pp0_iter4_reg;
        tmp_reg_746_pp0_iter6_reg <= tmp_reg_746_pp0_iter5_reg;
        tmp_reg_746_pp0_iter7_reg <= tmp_reg_746_pp0_iter6_reg;
        tmp_reg_746_pp0_iter8_reg <= tmp_reg_746_pp0_iter7_reg;
        tmp_reg_746_pp0_iter9_reg <= tmp_reg_746_pp0_iter8_reg;
        trunc_ln594_2_reg_897_pp0_iter12_reg <= trunc_ln594_2_reg_897;
        trunc_ln594_2_reg_897_pp0_iter13_reg <= trunc_ln594_2_reg_897_pp0_iter12_reg;
        trunc_ln594_2_reg_897_pp0_iter14_reg <= trunc_ln594_2_reg_897_pp0_iter13_reg;
        trunc_ln594_2_reg_897_pp0_iter15_reg <= trunc_ln594_2_reg_897_pp0_iter14_reg;
        trunc_ln594_2_reg_897_pp0_iter16_reg <= trunc_ln594_2_reg_897_pp0_iter15_reg;
        trunc_ln666_1_reg_954 <= trunc_ln666_1_fu_687_p1;
        trunc_ln666_reg_787_pp0_iter10_reg <= trunc_ln666_reg_787_pp0_iter9_reg;
        trunc_ln666_reg_787_pp0_iter2_reg <= trunc_ln666_reg_787_pp0_iter1_reg;
        trunc_ln666_reg_787_pp0_iter3_reg <= trunc_ln666_reg_787_pp0_iter2_reg;
        trunc_ln666_reg_787_pp0_iter4_reg <= trunc_ln666_reg_787_pp0_iter3_reg;
        trunc_ln666_reg_787_pp0_iter5_reg <= trunc_ln666_reg_787_pp0_iter4_reg;
        trunc_ln666_reg_787_pp0_iter6_reg <= trunc_ln666_reg_787_pp0_iter5_reg;
        trunc_ln666_reg_787_pp0_iter7_reg <= trunc_ln666_reg_787_pp0_iter6_reg;
        trunc_ln666_reg_787_pp0_iter8_reg <= trunc_ln666_reg_787_pp0_iter7_reg;
        trunc_ln666_reg_787_pp0_iter9_reg <= trunc_ln666_reg_787_pp0_iter8_reg;
        y_V_1_reg_949 <= y_V_1_fu_680_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln1647_1_reg_793_pp0_iter10_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exp_x_msb_3_4_5_lsb_m_1_V_reg_885 <= exp_x_msb_3_4_5_lsb_m_1_V_fu_524_p2;
        ret_V_reg_891 <= ret_V_fu_547_p2;
        trunc_ln594_2_reg_897 <= trunc_ln594_2_fu_553_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln1647_1_reg_793_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exp_x_msb_4_5_lsb_m_1_m4_V_reg_839 <= exp_x_msb_4_5_lsb_m_1_m4_V_fu_413_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln1647_1_reg_793_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exp_x_msb_4_5_lsb_m_1_m5_V_reg_849 <= exp_x_msb_4_5_lsb_m_1_m5_V_fu_429_p2;
        f_x_msb_3_V_reg_855 <= f_x_msb_3_table_V_q0;
        tmp_34_reg_860 <= {{f_x_msb_3_table_V_q0[50:12]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        f_x_msb_4_V_reg_798 <= f_x_msb_4_table_V_q0;
        or_ln1647_1_reg_793 <= or_ln1647_1_fu_342_p2;
        or_ln1647_1_reg_793_pp0_iter1_reg <= or_ln1647_1_reg_793;
        p_Result_s_103_reg_752 <= {{x[38:32]}};
        p_Result_s_103_reg_752_pp0_iter1_reg <= p_Result_s_103_reg_752;
        tmp_52_reg_757 <= {{x[31:24]}};
        tmp_52_reg_757_pp0_iter1_reg <= tmp_52_reg_757;
        tmp_53_reg_763 <= {{x[23:16]}};
        tmp_53_reg_763_pp0_iter1_reg <= tmp_53_reg_763;
        tmp_54_reg_770 <= {{x[15:8]}};
        tmp_55_reg_775 <= tmp_55_fu_323_p1;
        tmp_55_reg_775_pp0_iter1_reg <= tmp_55_reg_775;
        tmp_reg_746 <= x[32'd40];
        tmp_reg_746_pp0_iter1_reg <= tmp_reg_746;
        trunc_ln666_reg_787 <= trunc_ln666_fu_332_p1;
        trunc_ln666_reg_787_pp0_iter1_reg <= trunc_ln666_reg_787;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln1647_1_reg_793_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        f_x_msb_5_V_reg_829 <= f_x_msb_5_table_V_q0;
        trunc_ln2_reg_834 <= {{grp_fu_372_p2[39:34]}};
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln1647_1_reg_793_pp0_iter9_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_50_reg_875 <= {{grp_fu_469_p2[100:57]}};
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln1647_1_reg_793_pp0_iter15_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        trunc_ln4_reg_913 <= {{grp_fu_570_p2[129:68]}};
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln1647_1_reg_793_pp0_iter21_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        y_lo_s_V_reg_944 <= {{grp_fu_637_p2[139:72]}};
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to23 = 1'b1;
    end else begin
        ap_idle_pp0_0to23 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_idle_pp0_0to23 == 1'b1) & (ap_start == 1'b0))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exp_x_msb_1_table_V_ce0 = 1'b1;
    end else begin
        exp_x_msb_1_table_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        f_x_msb_2_table_V_ce0 = 1'b1;
    end else begin
        f_x_msb_2_table_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        f_x_msb_3_table_V_ce0 = 1'b1;
    end else begin
        f_x_msb_3_table_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        f_x_msb_4_table_V_ce0 = 1'b1;
    end else begin
        f_x_msb_4_table_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        f_x_msb_5_table_V_ce0 = 1'b1;
    end else begin
        f_x_msb_5_table_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln58_fu_700_p2 = (trunc_ln666_1_reg_954 + 63'd2147483648);

assign add_ln666_11_fu_615_p2 = (zext_ln666_14_fu_612_p1 + zext_ln1199_fu_597_p1);

assign add_ln666_fu_518_p2 = (zext_ln666_10_fu_500_p1 + zext_ln666_9_fu_497_p1);

assign and_ln1647_fu_277_p2 = (icmp_ln1505_fu_265_p2 & icmp_ln1503_fu_271_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return = ((overf_1_fu_715_p2[0:0] == 1'b1) ? 31'd2147483647 : tmp_36_fu_721_p4);

assign exp_x_msb_1_table_V_address0 = zext_ln527_5_fu_592_p1;

assign exp_x_msb_2_3_4_5_lsb_m_1_V_fu_625_p2 = (zext_ln666_15_fu_621_p1 + zext_ln1199_5_fu_608_p1);

assign exp_x_msb_3_4_5_lsb_m_1_V_fu_524_p2 = (add_ln666_fu_518_p2 + zext_ln666_11_fu_514_p1);

assign exp_x_msb_3_m_1_s_V_fu_453_p4 = {{{tmp_53_reg_763_pp0_iter5_reg}, {3'd0}}, {tmp_34_reg_860}};

assign exp_x_msb_4_5_lsb_m_1_m3_V_1_fu_394_p2 = (zext_ln294_fu_388_p1 + zext_ln666_fu_391_p1);

assign exp_x_msb_4_5_lsb_m_1_m4_V_fu_413_p2 = (trunc_ln3_fu_400_p4 + zext_ln666_7_fu_409_p1);

assign exp_x_msb_4_5_lsb_m_1_m5_V_fu_429_p2 = (zext_ln294_1_fu_423_p1 + zext_ln666_8_fu_426_p1);

assign f_x_msb_2_table_V_address0 = zext_ln527_4_fu_485_p1;

assign f_x_msb_3_table_V_address0 = zext_ln527_3_fu_419_p1;

assign f_x_msb_4_table_V_address0 = zext_ln527_fu_327_p1;

assign f_x_msb_5_table_V_address0 = zext_ln527_2_fu_362_p1;

assign grp_fu_372_p0 = grp_fu_372_p00;

assign grp_fu_372_p00 = f_x_msb_4_V_reg_798;

assign grp_fu_372_p1 = grp_fu_372_p10;

assign grp_fu_372_p10 = tmp_55_reg_775_pp0_iter1_reg;

assign grp_fu_469_p0 = grp_fu_469_p00;

assign grp_fu_469_p00 = tmp_s_fu_445_p4;

assign grp_fu_469_p1 = grp_fu_469_p10;

assign grp_fu_469_p10 = exp_x_msb_3_m_1_s_V_fu_453_p4;

assign grp_fu_570_p0 = grp_fu_570_p00;

assign grp_fu_570_p00 = p_Result_106_fu_557_p3;

assign grp_fu_570_p1 = grp_fu_570_p10;

assign grp_fu_570_p10 = exp_x_msb_3_4_5_lsb_m_1_V_reg_885;

assign grp_fu_637_p0 = grp_fu_637_p00;

assign grp_fu_637_p00 = exp_x_msb_2_3_4_5_lsb_m_1_V_reg_923;

assign grp_fu_637_p1 = grp_fu_637_p10;

assign grp_fu_637_p10 = exp_x_msb_1_V_reg_928;

assign grp_fu_739_p0 = grp_fu_739_p00;

assign grp_fu_739_p00 = x_msb_5_lsb_V_fu_348_p3;

assign grp_fu_739_p1 = grp_fu_739_p10;

assign grp_fu_739_p10 = tmp_54_reg_770;

assign icmp_ln1501_fu_259_p2 = (($signed(p_Result_s_fu_215_p4) > $signed(6'd22)) ? 1'b1 : 1'b0);

assign icmp_ln1503_fu_271_p2 = ((p_Result_102_fu_229_p3 > 67'd26668056198998764480) ? 1'b1 : 1'b0);

assign icmp_ln1505_fu_265_p2 = ((p_Result_s_fu_215_p4 == 6'd22) ? 1'b1 : 1'b0);

assign or_ln1647_1_fu_342_p2 = (overf_fu_253_p2 | or_ln1647_fu_336_p2);

assign or_ln1647_fu_336_p2 = (icmp_ln1501_fu_259_p2 | and_ln1647_fu_277_p2);

assign overf_1_fu_715_p2 = ((tmp_51_fu_705_p4 != 2'd0) ? 1'b1 : 1'b0);

assign overf_fu_253_p2 = (tmp_fu_237_p3 ^ tmp_45_fu_245_p3);

assign p_Result_102_fu_229_p3 = {{trunc_ln594_fu_225_p1}, {33'd0}};

assign p_Result_103_fu_576_p3 = {{tmp_reg_746_pp0_iter15_reg}, {p_Result_s_103_reg_752_pp0_iter15_reg}};

assign p_Result_104_fu_489_p4 = {{{tmp_53_reg_763_pp0_iter10_reg}, {3'd0}}, {f_x_msb_3_V_reg_855_pp0_iter10_reg}};

assign p_Result_105_fu_530_p4 = {{f_x_msb_2_table_V_q0[63:58]}};

assign p_Result_106_fu_557_p3 = {{ret_V_reg_891}, {trunc_ln594_2_reg_897}};

assign p_Result_s_fu_215_p4 = {{x[39:34]}};

assign p_Val2_45_fu_694_p2 = (zext_ln1632_fu_691_p1 + 65'd2147483648);

assign ret_V_fu_547_p2 = (zext_ln666_13_fu_544_p1 + zext_ln666_12_fu_540_p1);

assign rhs_14_fu_600_p4 = {{{ret_V_reg_891_pp0_iter16_reg}, {trunc_ln594_2_reg_897_pp0_iter16_reg}}, {4'd0}};

assign select_ln594_fu_658_p3 = ((xor_ln1632_fu_653_p2[0:0] == 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign tmp_35_fu_504_p5 = {{{{trunc_ln666_reg_787_pp0_iter10_reg}, {2'd0}}, {exp_x_msb_4_5_lsb_m_1_m5_V_reg_849_pp0_iter10_reg}}, {3'd0}};

assign tmp_36_fu_721_p4 = {{add_ln58_fu_700_p2[62:32]}};

assign tmp_45_fu_245_p3 = x[32'd39];

assign tmp_51_fu_705_p4 = {{p_Val2_45_fu_694_p2[64:63]}};

assign tmp_54_fu_313_p4 = {{x[15:8]}};

assign tmp_55_fu_323_p1 = x[7:0];

assign tmp_fu_237_p3 = x[32'd40];

assign tmp_s_fu_445_p4 = {{{trunc_ln666_reg_787_pp0_iter5_reg}, {2'd0}}, {exp_x_msb_4_5_lsb_m_1_m5_V_reg_849}};

assign trunc_ln3_fu_400_p1 = grp_fu_739_p2;

assign trunc_ln3_fu_400_p4 = {{trunc_ln3_fu_400_p1[32:8]}};

assign trunc_ln594_2_fu_553_p1 = f_x_msb_2_table_V_q0[57:0];

assign trunc_ln594_fu_225_p1 = x[33:0];

assign trunc_ln666_1_fu_687_p1 = y_V_1_fu_680_p3[62:0];

assign trunc_ln666_fu_332_p1 = x[15:0];

assign x_msb_5_lsb_V_fu_348_p3 = {{tmp_55_reg_775}, {17'd0}};

assign xor_ln1632_fu_653_p2 = (tmp_reg_746_pp0_iter22_reg ^ 1'd1);

assign y_V_1_fu_680_p3 = ((or_ln1647_1_reg_793_pp0_iter22_reg[0:0] == 1'b1) ? select_ln594_fu_658_p3 : y_V_fu_670_p4);

assign y_V_fu_670_p4 = {{y_l_V_fu_666_p2[67:4]}};

assign y_l_V_fu_666_p2 = (exp_x_msb_1_V_reg_928_pp0_iter22_reg + y_lo_s_V_reg_944);

assign zext_ln1199_5_fu_608_p1 = rhs_14_fu_600_p4;

assign zext_ln1199_fu_597_p1 = trunc_ln4_reg_913;

assign zext_ln1632_fu_691_p1 = y_V_1_reg_949;

assign zext_ln294_1_fu_423_p1 = f_x_msb_4_V_reg_798_pp0_iter4_reg;

assign zext_ln294_fu_388_p1 = f_x_msb_5_V_reg_829;

assign zext_ln527_2_fu_362_p1 = tmp_55_reg_775_pp0_iter1_reg;

assign zext_ln527_3_fu_419_p1 = tmp_53_reg_763_pp0_iter3_reg;

assign zext_ln527_4_fu_485_p1 = tmp_52_reg_757_pp0_iter9_reg;

assign zext_ln527_5_fu_592_p1 = p_Result_103_fu_576_p3;

assign zext_ln527_fu_327_p1 = tmp_54_fu_313_p4;

assign zext_ln666_10_fu_500_p1 = p_Result_104_fu_489_p4;

assign zext_ln666_11_fu_514_p1 = tmp_35_fu_504_p5;

assign zext_ln666_12_fu_540_p1 = p_Result_105_fu_530_p4;

assign zext_ln666_13_fu_544_p1 = tmp_52_reg_757_pp0_iter10_reg;

assign zext_ln666_14_fu_612_p1 = exp_x_msb_3_4_5_lsb_m_1_V_reg_885_pp0_iter16_reg;

assign zext_ln666_15_fu_621_p1 = add_ln666_11_fu_615_p2;

assign zext_ln666_7_fu_409_p1 = exp_x_msb_4_5_lsb_m_1_m3_V_1_fu_394_p2;

assign zext_ln666_8_fu_426_p1 = exp_x_msb_4_5_lsb_m_1_m4_V_reg_839;

assign zext_ln666_9_fu_497_p1 = tmp_50_reg_875;

assign zext_ln666_fu_391_p1 = trunc_ln2_reg_834;

endmodule //eucDistHW_exp_core_32_32_66_s
