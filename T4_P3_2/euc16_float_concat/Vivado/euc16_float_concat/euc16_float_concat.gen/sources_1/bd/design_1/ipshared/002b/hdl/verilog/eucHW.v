// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="eucHW_eucHW,hls_ip_2021_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010i-clg400-1L,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.566700,HLS_SYN_LAT=97,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1373,HLS_SYN_LUT=2697,HLS_VERSION=2021_1}" *)

module eucHW (
        ap_clk,
        ap_rst_n,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 98'd1;
parameter    ap_ST_fsm_state2 = 98'd2;
parameter    ap_ST_fsm_state3 = 98'd4;
parameter    ap_ST_fsm_state4 = 98'd8;
parameter    ap_ST_fsm_state5 = 98'd16;
parameter    ap_ST_fsm_state6 = 98'd32;
parameter    ap_ST_fsm_state7 = 98'd64;
parameter    ap_ST_fsm_state8 = 98'd128;
parameter    ap_ST_fsm_state9 = 98'd256;
parameter    ap_ST_fsm_state10 = 98'd512;
parameter    ap_ST_fsm_state11 = 98'd1024;
parameter    ap_ST_fsm_state12 = 98'd2048;
parameter    ap_ST_fsm_state13 = 98'd4096;
parameter    ap_ST_fsm_state14 = 98'd8192;
parameter    ap_ST_fsm_state15 = 98'd16384;
parameter    ap_ST_fsm_state16 = 98'd32768;
parameter    ap_ST_fsm_state17 = 98'd65536;
parameter    ap_ST_fsm_state18 = 98'd131072;
parameter    ap_ST_fsm_state19 = 98'd262144;
parameter    ap_ST_fsm_state20 = 98'd524288;
parameter    ap_ST_fsm_state21 = 98'd1048576;
parameter    ap_ST_fsm_state22 = 98'd2097152;
parameter    ap_ST_fsm_state23 = 98'd4194304;
parameter    ap_ST_fsm_state24 = 98'd8388608;
parameter    ap_ST_fsm_state25 = 98'd16777216;
parameter    ap_ST_fsm_state26 = 98'd33554432;
parameter    ap_ST_fsm_state27 = 98'd67108864;
parameter    ap_ST_fsm_state28 = 98'd134217728;
parameter    ap_ST_fsm_state29 = 98'd268435456;
parameter    ap_ST_fsm_state30 = 98'd536870912;
parameter    ap_ST_fsm_state31 = 98'd1073741824;
parameter    ap_ST_fsm_state32 = 98'd2147483648;
parameter    ap_ST_fsm_state33 = 98'd4294967296;
parameter    ap_ST_fsm_state34 = 98'd8589934592;
parameter    ap_ST_fsm_state35 = 98'd17179869184;
parameter    ap_ST_fsm_state36 = 98'd34359738368;
parameter    ap_ST_fsm_state37 = 98'd68719476736;
parameter    ap_ST_fsm_state38 = 98'd137438953472;
parameter    ap_ST_fsm_state39 = 98'd274877906944;
parameter    ap_ST_fsm_state40 = 98'd549755813888;
parameter    ap_ST_fsm_state41 = 98'd1099511627776;
parameter    ap_ST_fsm_state42 = 98'd2199023255552;
parameter    ap_ST_fsm_state43 = 98'd4398046511104;
parameter    ap_ST_fsm_state44 = 98'd8796093022208;
parameter    ap_ST_fsm_state45 = 98'd17592186044416;
parameter    ap_ST_fsm_state46 = 98'd35184372088832;
parameter    ap_ST_fsm_state47 = 98'd70368744177664;
parameter    ap_ST_fsm_state48 = 98'd140737488355328;
parameter    ap_ST_fsm_state49 = 98'd281474976710656;
parameter    ap_ST_fsm_state50 = 98'd562949953421312;
parameter    ap_ST_fsm_state51 = 98'd1125899906842624;
parameter    ap_ST_fsm_state52 = 98'd2251799813685248;
parameter    ap_ST_fsm_state53 = 98'd4503599627370496;
parameter    ap_ST_fsm_state54 = 98'd9007199254740992;
parameter    ap_ST_fsm_state55 = 98'd18014398509481984;
parameter    ap_ST_fsm_state56 = 98'd36028797018963968;
parameter    ap_ST_fsm_state57 = 98'd72057594037927936;
parameter    ap_ST_fsm_state58 = 98'd144115188075855872;
parameter    ap_ST_fsm_state59 = 98'd288230376151711744;
parameter    ap_ST_fsm_state60 = 98'd576460752303423488;
parameter    ap_ST_fsm_state61 = 98'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 98'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 98'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 98'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 98'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 98'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 98'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 98'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 98'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 98'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 98'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 98'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 98'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 98'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 98'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 98'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 98'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 98'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 98'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 98'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 98'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 98'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 98'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 98'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 98'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 98'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 98'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 98'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 98'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 98'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 98'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 98'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 98'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 98'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 98'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 98'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 98'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 98'd158456325028528675187087900672;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 9;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [97:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] y_add;
reg    y_add_ap_vld;
wire   [31:0] y_sqrt;
reg    y_sqrt_ap_vld;
wire   [7:0] x_0;
wire   [7:0] x_1;
wire   [7:0] x_2;
wire   [7:0] x_3;
wire   [7:0] x_4;
wire   [7:0] x_5;
wire   [7:0] x_6;
wire   [7:0] x_7;
wire   [7:0] x_8;
wire   [7:0] x_9;
wire   [7:0] x_10;
wire   [7:0] x_11;
wire   [7:0] x_12;
wire   [7:0] x_13;
wire   [7:0] x_14;
wire   [7:0] x_15;
wire   [7:0] x_16;
wire   [7:0] x_17;
wire   [7:0] x_18;
wire   [7:0] x_19;
wire   [7:0] x_20;
wire   [7:0] x_21;
wire   [7:0] x_22;
wire   [7:0] x_23;
wire   [7:0] x_24;
wire   [7:0] x_25;
wire   [7:0] x_26;
wire   [7:0] x_27;
wire   [7:0] x_28;
wire   [7:0] x_29;
wire   [7:0] x_30;
wire   [7:0] x_31;
wire   [31:0] grp_fu_368_p1;
reg   [31:0] reg_379;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state67;
wire    ap_CS_fsm_state72;
wire    ap_CS_fsm_state77;
wire   [31:0] grp_fu_364_p2;
reg   [31:0] reg_385;
wire    ap_CS_fsm_state82;
wire   [17:0] mul_ln16_fu_409_p2;
reg   [17:0] mul_ln16_reg_835;
wire   [17:0] mul_ln16_1_fu_433_p2;
reg   [17:0] mul_ln16_1_reg_840;
wire   [8:0] sub_ln16_2_fu_447_p2;
reg   [8:0] sub_ln16_2_reg_845;
wire   [8:0] sub_ln16_3_fu_461_p2;
reg   [8:0] sub_ln16_3_reg_850;
wire   [8:0] sub_ln16_4_fu_475_p2;
reg   [8:0] sub_ln16_4_reg_855;
wire   [8:0] sub_ln16_5_fu_489_p2;
reg   [8:0] sub_ln16_5_reg_860;
wire   [8:0] sub_ln16_6_fu_503_p2;
reg   [8:0] sub_ln16_6_reg_865;
wire   [8:0] sub_ln16_7_fu_517_p2;
reg   [8:0] sub_ln16_7_reg_870;
wire   [8:0] sub_ln16_8_fu_531_p2;
reg   [8:0] sub_ln16_8_reg_875;
wire   [8:0] sub_ln16_9_fu_545_p2;
reg   [8:0] sub_ln16_9_reg_880;
wire   [8:0] sub_ln16_10_fu_559_p2;
reg   [8:0] sub_ln16_10_reg_885;
wire   [8:0] sub_ln16_11_fu_573_p2;
reg   [8:0] sub_ln16_11_reg_890;
wire   [8:0] sub_ln16_12_fu_587_p2;
reg   [8:0] sub_ln16_12_reg_895;
wire   [8:0] sub_ln16_13_fu_601_p2;
reg   [8:0] sub_ln16_13_reg_900;
wire   [8:0] sub_ln16_14_fu_615_p2;
reg   [8:0] sub_ln16_14_reg_905;
wire   [8:0] sub_ln16_15_fu_629_p2;
reg   [8:0] sub_ln16_15_reg_910;
wire  signed [31:0] sext_ln16_16_fu_635_p1;
wire    ap_CS_fsm_state2;
wire   [17:0] mul_ln16_2_fu_646_p2;
reg   [17:0] mul_ln16_2_reg_925;
wire    ap_CS_fsm_state6;
wire   [31:0] grp_fu_371_p1;
reg   [31:0] conv12_1_reg_930;
wire  signed [31:0] sext_ln16_18_fu_652_p1;
wire   [17:0] mul_ln16_3_fu_659_p2;
reg   [17:0] mul_ln16_3_reg_940;
wire    ap_CS_fsm_state11;
wire  signed [31:0] sext_ln16_19_fu_665_p1;
wire   [17:0] mul_ln16_4_fu_672_p2;
reg   [17:0] mul_ln16_4_reg_950;
wire    ap_CS_fsm_state16;
wire  signed [31:0] sext_ln16_20_fu_678_p1;
wire   [17:0] mul_ln16_5_fu_685_p2;
reg   [17:0] mul_ln16_5_reg_960;
wire    ap_CS_fsm_state21;
wire  signed [31:0] sext_ln16_21_fu_691_p1;
wire   [17:0] mul_ln16_6_fu_698_p2;
reg   [17:0] mul_ln16_6_reg_970;
wire    ap_CS_fsm_state26;
wire  signed [31:0] sext_ln16_22_fu_704_p1;
wire   [17:0] mul_ln16_7_fu_711_p2;
reg   [17:0] mul_ln16_7_reg_980;
wire    ap_CS_fsm_state31;
wire  signed [31:0] sext_ln16_23_fu_717_p1;
wire   [17:0] mul_ln16_8_fu_724_p2;
reg   [17:0] mul_ln16_8_reg_990;
wire    ap_CS_fsm_state36;
wire  signed [31:0] sext_ln16_24_fu_730_p1;
wire   [17:0] mul_ln16_9_fu_737_p2;
reg   [17:0] mul_ln16_9_reg_1000;
wire    ap_CS_fsm_state41;
wire  signed [31:0] sext_ln16_25_fu_743_p1;
wire   [17:0] mul_ln16_10_fu_750_p2;
reg   [17:0] mul_ln16_10_reg_1010;
wire    ap_CS_fsm_state46;
wire  signed [31:0] sext_ln16_26_fu_756_p1;
wire   [17:0] mul_ln16_11_fu_763_p2;
reg   [17:0] mul_ln16_11_reg_1020;
wire    ap_CS_fsm_state51;
wire  signed [31:0] sext_ln16_27_fu_769_p1;
wire   [17:0] mul_ln16_12_fu_776_p2;
reg   [17:0] mul_ln16_12_reg_1030;
wire    ap_CS_fsm_state56;
wire  signed [31:0] sext_ln16_28_fu_782_p1;
wire   [17:0] mul_ln16_13_fu_789_p2;
reg   [17:0] mul_ln16_13_reg_1040;
wire    ap_CS_fsm_state61;
wire  signed [31:0] sext_ln16_29_fu_795_p1;
wire   [17:0] mul_ln16_14_fu_802_p2;
reg   [17:0] mul_ln16_14_reg_1050;
wire    ap_CS_fsm_state66;
wire  signed [31:0] sext_ln16_30_fu_808_p1;
wire   [17:0] mul_ln16_15_fu_815_p2;
reg   [17:0] mul_ln16_15_reg_1060;
wire    ap_CS_fsm_state71;
wire  signed [31:0] sext_ln16_31_fu_821_p1;
wire    ap_CS_fsm_state98;
reg   [31:0] grp_fu_364_p0;
reg   [31:0] grp_fu_364_p1;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_state68;
wire    ap_CS_fsm_state73;
wire    ap_CS_fsm_state78;
reg  signed [31:0] grp_fu_368_p0;
wire  signed [31:0] grp_fu_371_p0;
wire    ap_CS_fsm_state83;
wire   [8:0] zext_ln16_fu_391_p1;
wire   [8:0] zext_ln16_1_fu_395_p1;
wire   [8:0] sub_ln16_fu_399_p2;
wire  signed [8:0] mul_ln16_fu_409_p0;
wire  signed [17:0] sext_ln16_fu_405_p1;
wire  signed [8:0] mul_ln16_fu_409_p1;
wire   [8:0] zext_ln16_2_fu_415_p1;
wire   [8:0] zext_ln16_3_fu_419_p1;
wire   [8:0] sub_ln16_1_fu_423_p2;
wire  signed [8:0] mul_ln16_1_fu_433_p0;
wire  signed [17:0] sext_ln16_1_fu_429_p1;
wire  signed [8:0] mul_ln16_1_fu_433_p1;
wire   [8:0] zext_ln16_4_fu_439_p1;
wire   [8:0] zext_ln16_5_fu_443_p1;
wire   [8:0] zext_ln16_6_fu_453_p1;
wire   [8:0] zext_ln16_7_fu_457_p1;
wire   [8:0] zext_ln16_8_fu_467_p1;
wire   [8:0] zext_ln16_9_fu_471_p1;
wire   [8:0] zext_ln16_10_fu_481_p1;
wire   [8:0] zext_ln16_11_fu_485_p1;
wire   [8:0] zext_ln16_12_fu_495_p1;
wire   [8:0] zext_ln16_13_fu_499_p1;
wire   [8:0] zext_ln16_14_fu_509_p1;
wire   [8:0] zext_ln16_15_fu_513_p1;
wire   [8:0] zext_ln16_16_fu_523_p1;
wire   [8:0] zext_ln16_17_fu_527_p1;
wire   [8:0] zext_ln16_18_fu_537_p1;
wire   [8:0] zext_ln16_19_fu_541_p1;
wire   [8:0] zext_ln16_20_fu_551_p1;
wire   [8:0] zext_ln16_21_fu_555_p1;
wire   [8:0] zext_ln16_22_fu_565_p1;
wire   [8:0] zext_ln16_23_fu_569_p1;
wire   [8:0] zext_ln16_24_fu_579_p1;
wire   [8:0] zext_ln16_25_fu_583_p1;
wire   [8:0] zext_ln16_26_fu_593_p1;
wire   [8:0] zext_ln16_27_fu_597_p1;
wire   [8:0] zext_ln16_28_fu_607_p1;
wire   [8:0] zext_ln16_29_fu_611_p1;
wire   [8:0] zext_ln16_30_fu_621_p1;
wire   [8:0] zext_ln16_31_fu_625_p1;
wire  signed [8:0] mul_ln16_2_fu_646_p0;
wire  signed [17:0] sext_ln16_2_fu_643_p1;
wire  signed [8:0] mul_ln16_2_fu_646_p1;
wire  signed [8:0] mul_ln16_3_fu_659_p0;
wire  signed [17:0] sext_ln16_3_fu_656_p1;
wire  signed [8:0] mul_ln16_3_fu_659_p1;
wire  signed [8:0] mul_ln16_4_fu_672_p0;
wire  signed [17:0] sext_ln16_4_fu_669_p1;
wire  signed [8:0] mul_ln16_4_fu_672_p1;
wire  signed [8:0] mul_ln16_5_fu_685_p0;
wire  signed [17:0] sext_ln16_5_fu_682_p1;
wire  signed [8:0] mul_ln16_5_fu_685_p1;
wire  signed [8:0] mul_ln16_6_fu_698_p0;
wire  signed [17:0] sext_ln16_6_fu_695_p1;
wire  signed [8:0] mul_ln16_6_fu_698_p1;
wire  signed [8:0] mul_ln16_7_fu_711_p0;
wire  signed [17:0] sext_ln16_7_fu_708_p1;
wire  signed [8:0] mul_ln16_7_fu_711_p1;
wire  signed [8:0] mul_ln16_8_fu_724_p0;
wire  signed [17:0] sext_ln16_8_fu_721_p1;
wire  signed [8:0] mul_ln16_8_fu_724_p1;
wire  signed [8:0] mul_ln16_9_fu_737_p0;
wire  signed [17:0] sext_ln16_9_fu_734_p1;
wire  signed [8:0] mul_ln16_9_fu_737_p1;
wire  signed [8:0] mul_ln16_10_fu_750_p0;
wire  signed [17:0] sext_ln16_10_fu_747_p1;
wire  signed [8:0] mul_ln16_10_fu_750_p1;
wire  signed [8:0] mul_ln16_11_fu_763_p0;
wire  signed [17:0] sext_ln16_11_fu_760_p1;
wire  signed [8:0] mul_ln16_11_fu_763_p1;
wire  signed [8:0] mul_ln16_12_fu_776_p0;
wire  signed [17:0] sext_ln16_12_fu_773_p1;
wire  signed [8:0] mul_ln16_12_fu_776_p1;
wire  signed [8:0] mul_ln16_13_fu_789_p0;
wire  signed [17:0] sext_ln16_13_fu_786_p1;
wire  signed [8:0] mul_ln16_13_fu_789_p1;
wire  signed [8:0] mul_ln16_14_fu_802_p0;
wire  signed [17:0] sext_ln16_14_fu_799_p1;
wire  signed [8:0] mul_ln16_14_fu_802_p1;
wire  signed [8:0] mul_ln16_15_fu_815_p0;
wire  signed [17:0] sext_ln16_15_fu_812_p1;
wire  signed [8:0] mul_ln16_15_fu_815_p1;
wire   [31:0] grp_fu_374_p2;
reg   [97:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
wire    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
wire    ap_ST_fsm_state64_blk;
wire    ap_ST_fsm_state65_blk;
wire    ap_ST_fsm_state66_blk;
wire    ap_ST_fsm_state67_blk;
wire    ap_ST_fsm_state68_blk;
wire    ap_ST_fsm_state69_blk;
wire    ap_ST_fsm_state70_blk;
wire    ap_ST_fsm_state71_blk;
wire    ap_ST_fsm_state72_blk;
wire    ap_ST_fsm_state73_blk;
wire    ap_ST_fsm_state74_blk;
wire    ap_ST_fsm_state75_blk;
wire    ap_ST_fsm_state76_blk;
wire    ap_ST_fsm_state77_blk;
wire    ap_ST_fsm_state78_blk;
wire    ap_ST_fsm_state79_blk;
wire    ap_ST_fsm_state80_blk;
wire    ap_ST_fsm_state81_blk;
wire    ap_ST_fsm_state82_blk;
wire    ap_ST_fsm_state83_blk;
wire    ap_ST_fsm_state84_blk;
wire    ap_ST_fsm_state85_blk;
wire    ap_ST_fsm_state86_blk;
wire    ap_ST_fsm_state87_blk;
wire    ap_ST_fsm_state88_blk;
wire    ap_ST_fsm_state89_blk;
wire    ap_ST_fsm_state90_blk;
wire    ap_ST_fsm_state91_blk;
wire    ap_ST_fsm_state92_blk;
wire    ap_ST_fsm_state93_blk;
wire    ap_ST_fsm_state94_blk;
wire    ap_ST_fsm_state95_blk;
wire    ap_ST_fsm_state96_blk;
wire    ap_ST_fsm_state97_blk;
wire    ap_ST_fsm_state98_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 98'd1;
end

eucHW_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .y_add(y_add),
    .y_add_ap_vld(y_add_ap_vld),
    .y_sqrt(y_sqrt),
    .y_sqrt_ap_vld(y_sqrt_ap_vld),
    .x_0(x_0),
    .x_1(x_1),
    .x_2(x_2),
    .x_3(x_3),
    .x_4(x_4),
    .x_5(x_5),
    .x_6(x_6),
    .x_7(x_7),
    .x_8(x_8),
    .x_9(x_9),
    .x_10(x_10),
    .x_11(x_11),
    .x_12(x_12),
    .x_13(x_13),
    .x_14(x_14),
    .x_15(x_15),
    .x_16(x_16),
    .x_17(x_17),
    .x_18(x_18),
    .x_19(x_19),
    .x_20(x_20),
    .x_21(x_21),
    .x_22(x_22),
    .x_23(x_23),
    .x_24(x_24),
    .x_25(x_25),
    .x_26(x_26),
    .x_27(x_27),
    .x_28(x_28),
    .x_29(x_29),
    .x_30(x_30),
    .x_31(x_31),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

eucHW_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_364_p0),
    .din1(grp_fu_364_p1),
    .ce(1'b1),
    .dout(grp_fu_364_p2)
);

eucHW_sitofp_32s_32_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sitofp_32s_32_6_no_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_368_p0),
    .ce(1'b1),
    .dout(grp_fu_368_p1)
);

eucHW_sitofp_32s_32_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sitofp_32s_32_6_no_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_371_p0),
    .ce(1'b1),
    .dout(grp_fu_371_p1)
);

eucHW_fsqrt_32ns_32ns_32_16_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsqrt_32ns_32ns_32_16_no_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(32'd0),
    .din1(reg_385),
    .ce(1'b1),
    .dout(grp_fu_374_p2)
);

eucHW_mul_9s_9s_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 18 ))
mul_9s_9s_18_1_1_U5(
    .din0(mul_ln16_fu_409_p0),
    .din1(mul_ln16_fu_409_p1),
    .dout(mul_ln16_fu_409_p2)
);

eucHW_mul_9s_9s_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 18 ))
mul_9s_9s_18_1_1_U6(
    .din0(mul_ln16_1_fu_433_p0),
    .din1(mul_ln16_1_fu_433_p1),
    .dout(mul_ln16_1_fu_433_p2)
);

eucHW_mul_9s_9s_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 18 ))
mul_9s_9s_18_1_1_U7(
    .din0(mul_ln16_2_fu_646_p0),
    .din1(mul_ln16_2_fu_646_p1),
    .dout(mul_ln16_2_fu_646_p2)
);

eucHW_mul_9s_9s_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 18 ))
mul_9s_9s_18_1_1_U8(
    .din0(mul_ln16_3_fu_659_p0),
    .din1(mul_ln16_3_fu_659_p1),
    .dout(mul_ln16_3_fu_659_p2)
);

eucHW_mul_9s_9s_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 18 ))
mul_9s_9s_18_1_1_U9(
    .din0(mul_ln16_4_fu_672_p0),
    .din1(mul_ln16_4_fu_672_p1),
    .dout(mul_ln16_4_fu_672_p2)
);

eucHW_mul_9s_9s_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 18 ))
mul_9s_9s_18_1_1_U10(
    .din0(mul_ln16_5_fu_685_p0),
    .din1(mul_ln16_5_fu_685_p1),
    .dout(mul_ln16_5_fu_685_p2)
);

eucHW_mul_9s_9s_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 18 ))
mul_9s_9s_18_1_1_U11(
    .din0(mul_ln16_6_fu_698_p0),
    .din1(mul_ln16_6_fu_698_p1),
    .dout(mul_ln16_6_fu_698_p2)
);

eucHW_mul_9s_9s_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 18 ))
mul_9s_9s_18_1_1_U12(
    .din0(mul_ln16_7_fu_711_p0),
    .din1(mul_ln16_7_fu_711_p1),
    .dout(mul_ln16_7_fu_711_p2)
);

eucHW_mul_9s_9s_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 18 ))
mul_9s_9s_18_1_1_U13(
    .din0(mul_ln16_8_fu_724_p0),
    .din1(mul_ln16_8_fu_724_p1),
    .dout(mul_ln16_8_fu_724_p2)
);

eucHW_mul_9s_9s_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 18 ))
mul_9s_9s_18_1_1_U14(
    .din0(mul_ln16_9_fu_737_p0),
    .din1(mul_ln16_9_fu_737_p1),
    .dout(mul_ln16_9_fu_737_p2)
);

eucHW_mul_9s_9s_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 18 ))
mul_9s_9s_18_1_1_U15(
    .din0(mul_ln16_10_fu_750_p0),
    .din1(mul_ln16_10_fu_750_p1),
    .dout(mul_ln16_10_fu_750_p2)
);

eucHW_mul_9s_9s_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 18 ))
mul_9s_9s_18_1_1_U16(
    .din0(mul_ln16_11_fu_763_p0),
    .din1(mul_ln16_11_fu_763_p1),
    .dout(mul_ln16_11_fu_763_p2)
);

eucHW_mul_9s_9s_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 18 ))
mul_9s_9s_18_1_1_U17(
    .din0(mul_ln16_12_fu_776_p0),
    .din1(mul_ln16_12_fu_776_p1),
    .dout(mul_ln16_12_fu_776_p2)
);

eucHW_mul_9s_9s_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 18 ))
mul_9s_9s_18_1_1_U18(
    .din0(mul_ln16_13_fu_789_p0),
    .din1(mul_ln16_13_fu_789_p1),
    .dout(mul_ln16_13_fu_789_p2)
);

eucHW_mul_9s_9s_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 18 ))
mul_9s_9s_18_1_1_U19(
    .din0(mul_ln16_14_fu_802_p0),
    .din1(mul_ln16_14_fu_802_p1),
    .dout(mul_ln16_14_fu_802_p2)
);

eucHW_mul_9s_9s_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 18 ))
mul_9s_9s_18_1_1_U20(
    .din0(mul_ln16_15_fu_815_p0),
    .din1(mul_ln16_15_fu_815_p1),
    .dout(mul_ln16_15_fu_815_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        conv12_1_reg_930 <= grp_fu_371_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        mul_ln16_10_reg_1010 <= mul_ln16_10_fu_750_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        mul_ln16_11_reg_1020 <= mul_ln16_11_fu_763_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        mul_ln16_12_reg_1030 <= mul_ln16_12_fu_776_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        mul_ln16_13_reg_1040 <= mul_ln16_13_fu_789_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        mul_ln16_14_reg_1050 <= mul_ln16_14_fu_802_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        mul_ln16_15_reg_1060 <= mul_ln16_15_fu_815_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        mul_ln16_1_reg_840 <= mul_ln16_1_fu_433_p2;
        mul_ln16_reg_835 <= mul_ln16_fu_409_p2;
        sub_ln16_10_reg_885 <= sub_ln16_10_fu_559_p2;
        sub_ln16_11_reg_890 <= sub_ln16_11_fu_573_p2;
        sub_ln16_12_reg_895 <= sub_ln16_12_fu_587_p2;
        sub_ln16_13_reg_900 <= sub_ln16_13_fu_601_p2;
        sub_ln16_14_reg_905 <= sub_ln16_14_fu_615_p2;
        sub_ln16_15_reg_910 <= sub_ln16_15_fu_629_p2;
        sub_ln16_2_reg_845 <= sub_ln16_2_fu_447_p2;
        sub_ln16_3_reg_850 <= sub_ln16_3_fu_461_p2;
        sub_ln16_4_reg_855 <= sub_ln16_4_fu_475_p2;
        sub_ln16_5_reg_860 <= sub_ln16_5_fu_489_p2;
        sub_ln16_6_reg_865 <= sub_ln16_6_fu_503_p2;
        sub_ln16_7_reg_870 <= sub_ln16_7_fu_517_p2;
        sub_ln16_8_reg_875 <= sub_ln16_8_fu_531_p2;
        sub_ln16_9_reg_880 <= sub_ln16_9_fu_545_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        mul_ln16_2_reg_925 <= mul_ln16_2_fu_646_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        mul_ln16_3_reg_940 <= mul_ln16_3_fu_659_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        mul_ln16_4_reg_950 <= mul_ln16_4_fu_672_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        mul_ln16_5_reg_960 <= mul_ln16_5_fu_685_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        mul_ln16_6_reg_970 <= mul_ln16_6_fu_698_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        mul_ln16_7_reg_980 <= mul_ln16_7_fu_711_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        mul_ln16_8_reg_990 <= mul_ln16_8_fu_724_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        mul_ln16_9_reg_1000 <= mul_ln16_9_fu_737_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state7))) begin
        reg_379 <= grp_fu_368_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state12))) begin
        reg_385 <= grp_fu_364_p2;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state60_blk = 1'b0;

assign ap_ST_fsm_state61_blk = 1'b0;

assign ap_ST_fsm_state62_blk = 1'b0;

assign ap_ST_fsm_state63_blk = 1'b0;

assign ap_ST_fsm_state64_blk = 1'b0;

assign ap_ST_fsm_state65_blk = 1'b0;

assign ap_ST_fsm_state66_blk = 1'b0;

assign ap_ST_fsm_state67_blk = 1'b0;

assign ap_ST_fsm_state68_blk = 1'b0;

assign ap_ST_fsm_state69_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state70_blk = 1'b0;

assign ap_ST_fsm_state71_blk = 1'b0;

assign ap_ST_fsm_state72_blk = 1'b0;

assign ap_ST_fsm_state73_blk = 1'b0;

assign ap_ST_fsm_state74_blk = 1'b0;

assign ap_ST_fsm_state75_blk = 1'b0;

assign ap_ST_fsm_state76_blk = 1'b0;

assign ap_ST_fsm_state77_blk = 1'b0;

assign ap_ST_fsm_state78_blk = 1'b0;

assign ap_ST_fsm_state79_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state80_blk = 1'b0;

assign ap_ST_fsm_state81_blk = 1'b0;

assign ap_ST_fsm_state82_blk = 1'b0;

assign ap_ST_fsm_state83_blk = 1'b0;

assign ap_ST_fsm_state84_blk = 1'b0;

assign ap_ST_fsm_state85_blk = 1'b0;

assign ap_ST_fsm_state86_blk = 1'b0;

assign ap_ST_fsm_state87_blk = 1'b0;

assign ap_ST_fsm_state88_blk = 1'b0;

assign ap_ST_fsm_state89_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state90_blk = 1'b0;

assign ap_ST_fsm_state91_blk = 1'b0;

assign ap_ST_fsm_state92_blk = 1'b0;

assign ap_ST_fsm_state93_blk = 1'b0;

assign ap_ST_fsm_state94_blk = 1'b0;

assign ap_ST_fsm_state95_blk = 1'b0;

assign ap_ST_fsm_state96_blk = 1'b0;

assign ap_ST_fsm_state97_blk = 1'b0;

assign ap_ST_fsm_state98_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_fu_364_p0 = reg_385;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_364_p0 = reg_379;
    end else begin
        grp_fu_364_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_fu_364_p1 = reg_379;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_364_p1 = conv12_1_reg_930;
    end else begin
        grp_fu_364_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        grp_fu_368_p0 = sext_ln16_31_fu_821_p1;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        grp_fu_368_p0 = sext_ln16_30_fu_808_p1;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        grp_fu_368_p0 = sext_ln16_29_fu_795_p1;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        grp_fu_368_p0 = sext_ln16_28_fu_782_p1;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        grp_fu_368_p0 = sext_ln16_27_fu_769_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_368_p0 = sext_ln16_26_fu_756_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_368_p0 = sext_ln16_25_fu_743_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fu_368_p0 = sext_ln16_24_fu_730_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_368_p0 = sext_ln16_23_fu_717_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_368_p0 = sext_ln16_22_fu_704_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_368_p0 = sext_ln16_21_fu_691_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_368_p0 = sext_ln16_20_fu_678_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_368_p0 = sext_ln16_19_fu_665_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_368_p0 = sext_ln16_18_fu_652_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_368_p0 = sext_ln16_16_fu_635_p1;
    end else begin
        grp_fu_368_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        y_add_ap_vld = 1'b1;
    end else begin
        y_add_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        y_sqrt_ap_vld = 1'b1;
    end else begin
        y_sqrt_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd97];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_fu_371_p0 = $signed(mul_ln16_1_reg_840);

assign mul_ln16_10_fu_750_p0 = sext_ln16_10_fu_747_p1;

assign mul_ln16_10_fu_750_p1 = sext_ln16_10_fu_747_p1;

assign mul_ln16_11_fu_763_p0 = sext_ln16_11_fu_760_p1;

assign mul_ln16_11_fu_763_p1 = sext_ln16_11_fu_760_p1;

assign mul_ln16_12_fu_776_p0 = sext_ln16_12_fu_773_p1;

assign mul_ln16_12_fu_776_p1 = sext_ln16_12_fu_773_p1;

assign mul_ln16_13_fu_789_p0 = sext_ln16_13_fu_786_p1;

assign mul_ln16_13_fu_789_p1 = sext_ln16_13_fu_786_p1;

assign mul_ln16_14_fu_802_p0 = sext_ln16_14_fu_799_p1;

assign mul_ln16_14_fu_802_p1 = sext_ln16_14_fu_799_p1;

assign mul_ln16_15_fu_815_p0 = sext_ln16_15_fu_812_p1;

assign mul_ln16_15_fu_815_p1 = sext_ln16_15_fu_812_p1;

assign mul_ln16_1_fu_433_p0 = sext_ln16_1_fu_429_p1;

assign mul_ln16_1_fu_433_p1 = sext_ln16_1_fu_429_p1;

assign mul_ln16_2_fu_646_p0 = sext_ln16_2_fu_643_p1;

assign mul_ln16_2_fu_646_p1 = sext_ln16_2_fu_643_p1;

assign mul_ln16_3_fu_659_p0 = sext_ln16_3_fu_656_p1;

assign mul_ln16_3_fu_659_p1 = sext_ln16_3_fu_656_p1;

assign mul_ln16_4_fu_672_p0 = sext_ln16_4_fu_669_p1;

assign mul_ln16_4_fu_672_p1 = sext_ln16_4_fu_669_p1;

assign mul_ln16_5_fu_685_p0 = sext_ln16_5_fu_682_p1;

assign mul_ln16_5_fu_685_p1 = sext_ln16_5_fu_682_p1;

assign mul_ln16_6_fu_698_p0 = sext_ln16_6_fu_695_p1;

assign mul_ln16_6_fu_698_p1 = sext_ln16_6_fu_695_p1;

assign mul_ln16_7_fu_711_p0 = sext_ln16_7_fu_708_p1;

assign mul_ln16_7_fu_711_p1 = sext_ln16_7_fu_708_p1;

assign mul_ln16_8_fu_724_p0 = sext_ln16_8_fu_721_p1;

assign mul_ln16_8_fu_724_p1 = sext_ln16_8_fu_721_p1;

assign mul_ln16_9_fu_737_p0 = sext_ln16_9_fu_734_p1;

assign mul_ln16_9_fu_737_p1 = sext_ln16_9_fu_734_p1;

assign mul_ln16_fu_409_p0 = sext_ln16_fu_405_p1;

assign mul_ln16_fu_409_p1 = sext_ln16_fu_405_p1;

assign sext_ln16_10_fu_747_p1 = $signed(sub_ln16_10_reg_885);

assign sext_ln16_11_fu_760_p1 = $signed(sub_ln16_11_reg_890);

assign sext_ln16_12_fu_773_p1 = $signed(sub_ln16_12_reg_895);

assign sext_ln16_13_fu_786_p1 = $signed(sub_ln16_13_reg_900);

assign sext_ln16_14_fu_799_p1 = $signed(sub_ln16_14_reg_905);

assign sext_ln16_15_fu_812_p1 = $signed(sub_ln16_15_reg_910);

assign sext_ln16_16_fu_635_p1 = $signed(mul_ln16_reg_835);

assign sext_ln16_18_fu_652_p1 = $signed(mul_ln16_2_reg_925);

assign sext_ln16_19_fu_665_p1 = $signed(mul_ln16_3_reg_940);

assign sext_ln16_1_fu_429_p1 = $signed(sub_ln16_1_fu_423_p2);

assign sext_ln16_20_fu_678_p1 = $signed(mul_ln16_4_reg_950);

assign sext_ln16_21_fu_691_p1 = $signed(mul_ln16_5_reg_960);

assign sext_ln16_22_fu_704_p1 = $signed(mul_ln16_6_reg_970);

assign sext_ln16_23_fu_717_p1 = $signed(mul_ln16_7_reg_980);

assign sext_ln16_24_fu_730_p1 = $signed(mul_ln16_8_reg_990);

assign sext_ln16_25_fu_743_p1 = $signed(mul_ln16_9_reg_1000);

assign sext_ln16_26_fu_756_p1 = $signed(mul_ln16_10_reg_1010);

assign sext_ln16_27_fu_769_p1 = $signed(mul_ln16_11_reg_1020);

assign sext_ln16_28_fu_782_p1 = $signed(mul_ln16_12_reg_1030);

assign sext_ln16_29_fu_795_p1 = $signed(mul_ln16_13_reg_1040);

assign sext_ln16_2_fu_643_p1 = $signed(sub_ln16_2_reg_845);

assign sext_ln16_30_fu_808_p1 = $signed(mul_ln16_14_reg_1050);

assign sext_ln16_31_fu_821_p1 = $signed(mul_ln16_15_reg_1060);

assign sext_ln16_3_fu_656_p1 = $signed(sub_ln16_3_reg_850);

assign sext_ln16_4_fu_669_p1 = $signed(sub_ln16_4_reg_855);

assign sext_ln16_5_fu_682_p1 = $signed(sub_ln16_5_reg_860);

assign sext_ln16_6_fu_695_p1 = $signed(sub_ln16_6_reg_865);

assign sext_ln16_7_fu_708_p1 = $signed(sub_ln16_7_reg_870);

assign sext_ln16_8_fu_721_p1 = $signed(sub_ln16_8_reg_875);

assign sext_ln16_9_fu_734_p1 = $signed(sub_ln16_9_reg_880);

assign sext_ln16_fu_405_p1 = $signed(sub_ln16_fu_399_p2);

assign sub_ln16_10_fu_559_p2 = (zext_ln16_20_fu_551_p1 - zext_ln16_21_fu_555_p1);

assign sub_ln16_11_fu_573_p2 = (zext_ln16_22_fu_565_p1 - zext_ln16_23_fu_569_p1);

assign sub_ln16_12_fu_587_p2 = (zext_ln16_24_fu_579_p1 - zext_ln16_25_fu_583_p1);

assign sub_ln16_13_fu_601_p2 = (zext_ln16_26_fu_593_p1 - zext_ln16_27_fu_597_p1);

assign sub_ln16_14_fu_615_p2 = (zext_ln16_28_fu_607_p1 - zext_ln16_29_fu_611_p1);

assign sub_ln16_15_fu_629_p2 = (zext_ln16_30_fu_621_p1 - zext_ln16_31_fu_625_p1);

assign sub_ln16_1_fu_423_p2 = (zext_ln16_2_fu_415_p1 - zext_ln16_3_fu_419_p1);

assign sub_ln16_2_fu_447_p2 = (zext_ln16_4_fu_439_p1 - zext_ln16_5_fu_443_p1);

assign sub_ln16_3_fu_461_p2 = (zext_ln16_6_fu_453_p1 - zext_ln16_7_fu_457_p1);

assign sub_ln16_4_fu_475_p2 = (zext_ln16_8_fu_467_p1 - zext_ln16_9_fu_471_p1);

assign sub_ln16_5_fu_489_p2 = (zext_ln16_10_fu_481_p1 - zext_ln16_11_fu_485_p1);

assign sub_ln16_6_fu_503_p2 = (zext_ln16_12_fu_495_p1 - zext_ln16_13_fu_499_p1);

assign sub_ln16_7_fu_517_p2 = (zext_ln16_14_fu_509_p1 - zext_ln16_15_fu_513_p1);

assign sub_ln16_8_fu_531_p2 = (zext_ln16_16_fu_523_p1 - zext_ln16_17_fu_527_p1);

assign sub_ln16_9_fu_545_p2 = (zext_ln16_18_fu_537_p1 - zext_ln16_19_fu_541_p1);

assign sub_ln16_fu_399_p2 = (zext_ln16_fu_391_p1 - zext_ln16_1_fu_395_p1);

assign y_add = reg_385;

assign y_sqrt = grp_fu_374_p2;

assign zext_ln16_10_fu_481_p1 = x_21;

assign zext_ln16_11_fu_485_p1 = x_5;

assign zext_ln16_12_fu_495_p1 = x_22;

assign zext_ln16_13_fu_499_p1 = x_6;

assign zext_ln16_14_fu_509_p1 = x_23;

assign zext_ln16_15_fu_513_p1 = x_7;

assign zext_ln16_16_fu_523_p1 = x_24;

assign zext_ln16_17_fu_527_p1 = x_8;

assign zext_ln16_18_fu_537_p1 = x_25;

assign zext_ln16_19_fu_541_p1 = x_9;

assign zext_ln16_1_fu_395_p1 = x_0;

assign zext_ln16_20_fu_551_p1 = x_26;

assign zext_ln16_21_fu_555_p1 = x_10;

assign zext_ln16_22_fu_565_p1 = x_27;

assign zext_ln16_23_fu_569_p1 = x_11;

assign zext_ln16_24_fu_579_p1 = x_28;

assign zext_ln16_25_fu_583_p1 = x_12;

assign zext_ln16_26_fu_593_p1 = x_29;

assign zext_ln16_27_fu_597_p1 = x_13;

assign zext_ln16_28_fu_607_p1 = x_30;

assign zext_ln16_29_fu_611_p1 = x_14;

assign zext_ln16_2_fu_415_p1 = x_17;

assign zext_ln16_30_fu_621_p1 = x_31;

assign zext_ln16_31_fu_625_p1 = x_15;

assign zext_ln16_3_fu_419_p1 = x_1;

assign zext_ln16_4_fu_439_p1 = x_18;

assign zext_ln16_5_fu_443_p1 = x_2;

assign zext_ln16_6_fu_453_p1 = x_19;

assign zext_ln16_7_fu_457_p1 = x_3;

assign zext_ln16_8_fu_467_p1 = x_20;

assign zext_ln16_9_fu_471_p1 = x_4;

assign zext_ln16_fu_391_p1 = x_16;

endmodule //eucHW
