-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity eucHW_eucHW_Pipeline_VITIS_LOOP_34_25 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    out_array_15_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    out_array_14_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    out_array_13_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    out_array_12_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    out_array_11_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    out_array_10_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    out_array_9_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    out_array_8_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    out_array_7_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    out_array_6_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    out_array_5_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    out_array_4_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    out_array_3_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    out_array_2_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    out_array_1_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    out_array_0_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    out_array_30_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    out_array_29_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    out_array_28_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    out_array_27_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    out_array_26_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    out_array_25_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    out_array_24_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    out_array_23_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    out_array_22_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    out_array_21_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    out_array_20_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    out_array_19_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    out_array_18_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    out_array_17_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    out_array_16_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    out_array_31_8_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    out_array_15_10_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_array_15_10_out_ap_vld : OUT STD_LOGIC;
    out_array_14_10_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_array_14_10_out_ap_vld : OUT STD_LOGIC;
    out_array_13_10_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_array_13_10_out_ap_vld : OUT STD_LOGIC;
    out_array_12_10_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_array_12_10_out_ap_vld : OUT STD_LOGIC;
    out_array_11_10_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_array_11_10_out_ap_vld : OUT STD_LOGIC;
    out_array_10_10_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_array_10_10_out_ap_vld : OUT STD_LOGIC;
    out_array_9_10_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_array_9_10_out_ap_vld : OUT STD_LOGIC;
    out_array_8_10_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_array_8_10_out_ap_vld : OUT STD_LOGIC;
    out_array_7_10_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_array_7_10_out_ap_vld : OUT STD_LOGIC;
    out_array_6_10_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_array_6_10_out_ap_vld : OUT STD_LOGIC;
    out_array_5_10_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_array_5_10_out_ap_vld : OUT STD_LOGIC;
    out_array_4_10_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_array_4_10_out_ap_vld : OUT STD_LOGIC;
    out_array_3_10_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_array_3_10_out_ap_vld : OUT STD_LOGIC;
    out_array_2_10_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_array_2_10_out_ap_vld : OUT STD_LOGIC;
    out_array_1_10_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_array_1_10_out_ap_vld : OUT STD_LOGIC;
    out_array_0_10_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_array_0_10_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of eucHW_eucHW_Pipeline_VITIS_LOOP_34_25 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln34_fu_616_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal trunc_ln38_fu_628_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln38_reg_1285 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tem2_fu_900_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tem2_reg_1290 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_fu_156 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_i_4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal add_ln34_fu_622_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal out_array_1_fu_160 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_array_1_35_fu_998_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_array_1_19_fu_164 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_array_1_20_fu_168 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_array_1_21_fu_172 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_array_1_22_fu_176 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_array_1_23_fu_180 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_array_1_24_fu_184 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_array_1_25_fu_188 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_array_1_26_fu_192 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_array_1_27_fu_196 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_array_1_28_fu_200 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_array_1_29_fu_204 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_array_1_30_fu_208 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_array_1_31_fu_212 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_array_1_32_fu_216 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_array_1_33_fu_220 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal icmp_ln39_22_fu_716_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_21_fu_710_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_20_fu_704_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_19_fu_698_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_18_fu_692_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_17_fu_686_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_16_fu_680_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_15_fu_674_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_14_fu_668_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_13_fu_662_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_12_fu_656_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_11_fu_650_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_10_fu_644_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_9_fu_638_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_fu_632_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln39_fu_730_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln39_fu_722_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln39_9_fu_736_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln39_4_fu_744_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln39_5_fu_758_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln39_10_fu_750_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln39_11_fu_764_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln39_6_fu_772_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln39_7_fu_786_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln39_12_fu_778_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln39_13_fu_792_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln39_8_fu_800_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln39_9_fu_814_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln39_14_fu_806_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln39_15_fu_820_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln39_10_fu_836_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln39_16_fu_828_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln39_17_fu_842_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln39_11_fu_850_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln39_12_fu_864_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln39_18_fu_856_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln39_19_fu_870_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln39_13_fu_886_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln39_20_fu_878_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln39_21_fu_892_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tem1_fu_961_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component eucHW_mux_164_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (31 downto 0);
        din11 : IN STD_LOGIC_VECTOR (31 downto 0);
        din12 : IN STD_LOGIC_VECTOR (31 downto 0);
        din13 : IN STD_LOGIC_VECTOR (31 downto 0);
        din14 : IN STD_LOGIC_VECTOR (31 downto 0);
        din15 : IN STD_LOGIC_VECTOR (31 downto 0);
        din16 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component eucHW_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mux_164_32_1_1_U2985 : component eucHW_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => out_array_1_fu_160,
        din1 => out_array_1_19_fu_164,
        din2 => out_array_1_20_fu_168,
        din3 => out_array_1_21_fu_172,
        din4 => out_array_1_22_fu_176,
        din5 => out_array_1_23_fu_180,
        din6 => out_array_1_24_fu_184,
        din7 => out_array_1_25_fu_188,
        din8 => out_array_1_26_fu_192,
        din9 => out_array_1_27_fu_196,
        din10 => out_array_1_28_fu_200,
        din11 => out_array_1_29_fu_204,
        din12 => out_array_1_30_fu_208,
        din13 => out_array_1_31_fu_212,
        din14 => out_array_1_32_fu_216,
        din15 => out_array_1_33_fu_220,
        din16 => trunc_ln38_reg_1285,
        dout => tem1_fu_961_p18);

    flow_control_loop_pipe_sequential_init_U : component eucHW_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    i_fu_156_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln34_fu_616_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    i_fu_156 <= add_ln34_fu_622_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_fu_156 <= ap_const_lv5_0;
                end if;
            end if; 
        end if;
    end process;

    out_array_1_19_fu_164_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    out_array_1_19_fu_164 <= out_array_1_8_reload;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln38_reg_1285 = ap_const_lv4_1))) then 
                    out_array_1_19_fu_164 <= out_array_1_35_fu_998_p2;
                end if;
            end if; 
        end if;
    end process;

    out_array_1_20_fu_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    out_array_1_20_fu_168 <= out_array_2_8_reload;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln38_reg_1285 = ap_const_lv4_2))) then 
                    out_array_1_20_fu_168 <= out_array_1_35_fu_998_p2;
                end if;
            end if; 
        end if;
    end process;

    out_array_1_21_fu_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    out_array_1_21_fu_172 <= out_array_3_8_reload;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln38_reg_1285 = ap_const_lv4_3))) then 
                    out_array_1_21_fu_172 <= out_array_1_35_fu_998_p2;
                end if;
            end if; 
        end if;
    end process;

    out_array_1_22_fu_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    out_array_1_22_fu_176 <= out_array_4_8_reload;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln38_reg_1285 = ap_const_lv4_4))) then 
                    out_array_1_22_fu_176 <= out_array_1_35_fu_998_p2;
                end if;
            end if; 
        end if;
    end process;

    out_array_1_23_fu_180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    out_array_1_23_fu_180 <= out_array_5_8_reload;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln38_reg_1285 = ap_const_lv4_5))) then 
                    out_array_1_23_fu_180 <= out_array_1_35_fu_998_p2;
                end if;
            end if; 
        end if;
    end process;

    out_array_1_24_fu_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    out_array_1_24_fu_184 <= out_array_6_8_reload;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln38_reg_1285 = ap_const_lv4_6))) then 
                    out_array_1_24_fu_184 <= out_array_1_35_fu_998_p2;
                end if;
            end if; 
        end if;
    end process;

    out_array_1_25_fu_188_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    out_array_1_25_fu_188 <= out_array_7_8_reload;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln38_reg_1285 = ap_const_lv4_7))) then 
                    out_array_1_25_fu_188 <= out_array_1_35_fu_998_p2;
                end if;
            end if; 
        end if;
    end process;

    out_array_1_26_fu_192_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    out_array_1_26_fu_192 <= out_array_8_8_reload;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln38_reg_1285 = ap_const_lv4_8))) then 
                    out_array_1_26_fu_192 <= out_array_1_35_fu_998_p2;
                end if;
            end if; 
        end if;
    end process;

    out_array_1_27_fu_196_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    out_array_1_27_fu_196 <= out_array_9_8_reload;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln38_reg_1285 = ap_const_lv4_9))) then 
                    out_array_1_27_fu_196 <= out_array_1_35_fu_998_p2;
                end if;
            end if; 
        end if;
    end process;

    out_array_1_28_fu_200_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    out_array_1_28_fu_200 <= out_array_10_8_reload;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln38_reg_1285 = ap_const_lv4_A))) then 
                    out_array_1_28_fu_200 <= out_array_1_35_fu_998_p2;
                end if;
            end if; 
        end if;
    end process;

    out_array_1_29_fu_204_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    out_array_1_29_fu_204 <= out_array_11_8_reload;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln38_reg_1285 = ap_const_lv4_B))) then 
                    out_array_1_29_fu_204 <= out_array_1_35_fu_998_p2;
                end if;
            end if; 
        end if;
    end process;

    out_array_1_30_fu_208_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    out_array_1_30_fu_208 <= out_array_12_8_reload;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln38_reg_1285 = ap_const_lv4_C))) then 
                    out_array_1_30_fu_208 <= out_array_1_35_fu_998_p2;
                end if;
            end if; 
        end if;
    end process;

    out_array_1_31_fu_212_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    out_array_1_31_fu_212 <= out_array_13_8_reload;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln38_reg_1285 = ap_const_lv4_D))) then 
                    out_array_1_31_fu_212 <= out_array_1_35_fu_998_p2;
                end if;
            end if; 
        end if;
    end process;

    out_array_1_32_fu_216_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    out_array_1_32_fu_216 <= out_array_14_8_reload;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln38_reg_1285 = ap_const_lv4_E))) then 
                    out_array_1_32_fu_216 <= out_array_1_35_fu_998_p2;
                end if;
            end if; 
        end if;
    end process;

    out_array_1_33_fu_220_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    out_array_1_33_fu_220 <= out_array_15_8_reload;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln38_reg_1285 = ap_const_lv4_F))) then 
                    out_array_1_33_fu_220 <= out_array_1_35_fu_998_p2;
                end if;
            end if; 
        end if;
    end process;

    out_array_1_fu_160_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    out_array_1_fu_160 <= out_array_0_8_reload;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln38_reg_1285 = ap_const_lv4_0))) then 
                    out_array_1_fu_160 <= out_array_1_35_fu_998_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln34_fu_616_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tem2_reg_1290 <= tem2_fu_900_p3;
                trunc_ln38_reg_1285 <= trunc_ln38_fu_628_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln34_fu_622_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i_4) + unsigned(ap_const_lv5_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln34_fu_616_p2)
    begin
        if (((icmp_ln34_fu_616_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_4_assign_proc : process(ap_CS_fsm_pp0_stage0, i_fu_156, ap_loop_init, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_i_4 <= ap_const_lv5_0;
        else 
            ap_sig_allocacmp_i_4 <= i_fu_156;
        end if; 
    end process;

    icmp_ln34_fu_616_p2 <= "1" when (ap_sig_allocacmp_i_4 = ap_const_lv5_10) else "0";
    icmp_ln39_10_fu_644_p2 <= "1" when (trunc_ln38_fu_628_p1 = ap_const_lv4_2) else "0";
    icmp_ln39_11_fu_650_p2 <= "1" when (trunc_ln38_fu_628_p1 = ap_const_lv4_3) else "0";
    icmp_ln39_12_fu_656_p2 <= "1" when (trunc_ln38_fu_628_p1 = ap_const_lv4_4) else "0";
    icmp_ln39_13_fu_662_p2 <= "1" when (trunc_ln38_fu_628_p1 = ap_const_lv4_5) else "0";
    icmp_ln39_14_fu_668_p2 <= "1" when (trunc_ln38_fu_628_p1 = ap_const_lv4_6) else "0";
    icmp_ln39_15_fu_674_p2 <= "1" when (trunc_ln38_fu_628_p1 = ap_const_lv4_7) else "0";
    icmp_ln39_16_fu_680_p2 <= "1" when (trunc_ln38_fu_628_p1 = ap_const_lv4_8) else "0";
    icmp_ln39_17_fu_686_p2 <= "1" when (trunc_ln38_fu_628_p1 = ap_const_lv4_9) else "0";
    icmp_ln39_18_fu_692_p2 <= "1" when (trunc_ln38_fu_628_p1 = ap_const_lv4_A) else "0";
    icmp_ln39_19_fu_698_p2 <= "1" when (trunc_ln38_fu_628_p1 = ap_const_lv4_B) else "0";
    icmp_ln39_20_fu_704_p2 <= "1" when (trunc_ln38_fu_628_p1 = ap_const_lv4_C) else "0";
    icmp_ln39_21_fu_710_p2 <= "1" when (trunc_ln38_fu_628_p1 = ap_const_lv4_D) else "0";
    icmp_ln39_22_fu_716_p2 <= "1" when (trunc_ln38_fu_628_p1 = ap_const_lv4_E) else "0";
    icmp_ln39_9_fu_638_p2 <= "1" when (trunc_ln38_fu_628_p1 = ap_const_lv4_1) else "0";
    icmp_ln39_fu_632_p2 <= "1" when (trunc_ln38_fu_628_p1 = ap_const_lv4_0) else "0";
    or_ln39_10_fu_836_p2 <= (or_ln39_fu_730_p2 or or_ln39_4_fu_744_p2);
    or_ln39_11_fu_850_p2 <= (or_ln39_6_fu_772_p2 or or_ln39_5_fu_758_p2);
    or_ln39_12_fu_864_p2 <= (or_ln39_8_fu_800_p2 or or_ln39_7_fu_786_p2);
    or_ln39_13_fu_886_p2 <= (or_ln39_11_fu_850_p2 or or_ln39_10_fu_836_p2);
    or_ln39_4_fu_744_p2 <= (icmp_ln39_20_fu_704_p2 or icmp_ln39_19_fu_698_p2);
    or_ln39_5_fu_758_p2 <= (icmp_ln39_18_fu_692_p2 or icmp_ln39_17_fu_686_p2);
    or_ln39_6_fu_772_p2 <= (icmp_ln39_16_fu_680_p2 or icmp_ln39_15_fu_674_p2);
    or_ln39_7_fu_786_p2 <= (icmp_ln39_14_fu_668_p2 or icmp_ln39_13_fu_662_p2);
    or_ln39_8_fu_800_p2 <= (icmp_ln39_12_fu_656_p2 or icmp_ln39_11_fu_650_p2);
    or_ln39_9_fu_814_p2 <= (icmp_ln39_9_fu_638_p2 or icmp_ln39_10_fu_644_p2);
    or_ln39_fu_730_p2 <= (icmp_ln39_22_fu_716_p2 or icmp_ln39_21_fu_710_p2);
    out_array_0_10_out <= out_array_1_fu_160;

    out_array_0_10_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln34_fu_616_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln34_fu_616_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_array_0_10_out_ap_vld <= ap_const_logic_1;
        else 
            out_array_0_10_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    out_array_10_10_out <= out_array_1_28_fu_200;

    out_array_10_10_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln34_fu_616_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln34_fu_616_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_array_10_10_out_ap_vld <= ap_const_logic_1;
        else 
            out_array_10_10_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    out_array_11_10_out <= out_array_1_29_fu_204;

    out_array_11_10_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln34_fu_616_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln34_fu_616_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_array_11_10_out_ap_vld <= ap_const_logic_1;
        else 
            out_array_11_10_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    out_array_12_10_out <= out_array_1_30_fu_208;

    out_array_12_10_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln34_fu_616_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln34_fu_616_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_array_12_10_out_ap_vld <= ap_const_logic_1;
        else 
            out_array_12_10_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    out_array_13_10_out <= out_array_1_31_fu_212;

    out_array_13_10_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln34_fu_616_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln34_fu_616_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_array_13_10_out_ap_vld <= ap_const_logic_1;
        else 
            out_array_13_10_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    out_array_14_10_out <= out_array_1_32_fu_216;

    out_array_14_10_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln34_fu_616_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln34_fu_616_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_array_14_10_out_ap_vld <= ap_const_logic_1;
        else 
            out_array_14_10_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    out_array_15_10_out <= out_array_1_33_fu_220;

    out_array_15_10_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln34_fu_616_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln34_fu_616_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_array_15_10_out_ap_vld <= ap_const_logic_1;
        else 
            out_array_15_10_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    out_array_1_10_out <= out_array_1_19_fu_164;

    out_array_1_10_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln34_fu_616_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln34_fu_616_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_array_1_10_out_ap_vld <= ap_const_logic_1;
        else 
            out_array_1_10_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    out_array_1_35_fu_998_p2 <= std_logic_vector(unsigned(tem2_reg_1290) + unsigned(tem1_fu_961_p18));
    out_array_2_10_out <= out_array_1_20_fu_168;

    out_array_2_10_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln34_fu_616_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln34_fu_616_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_array_2_10_out_ap_vld <= ap_const_logic_1;
        else 
            out_array_2_10_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    out_array_3_10_out <= out_array_1_21_fu_172;

    out_array_3_10_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln34_fu_616_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln34_fu_616_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_array_3_10_out_ap_vld <= ap_const_logic_1;
        else 
            out_array_3_10_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    out_array_4_10_out <= out_array_1_22_fu_176;

    out_array_4_10_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln34_fu_616_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln34_fu_616_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_array_4_10_out_ap_vld <= ap_const_logic_1;
        else 
            out_array_4_10_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    out_array_5_10_out <= out_array_1_23_fu_180;

    out_array_5_10_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln34_fu_616_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln34_fu_616_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_array_5_10_out_ap_vld <= ap_const_logic_1;
        else 
            out_array_5_10_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    out_array_6_10_out <= out_array_1_24_fu_184;

    out_array_6_10_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln34_fu_616_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln34_fu_616_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_array_6_10_out_ap_vld <= ap_const_logic_1;
        else 
            out_array_6_10_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    out_array_7_10_out <= out_array_1_25_fu_188;

    out_array_7_10_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln34_fu_616_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln34_fu_616_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_array_7_10_out_ap_vld <= ap_const_logic_1;
        else 
            out_array_7_10_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    out_array_8_10_out <= out_array_1_26_fu_192;

    out_array_8_10_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln34_fu_616_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln34_fu_616_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_array_8_10_out_ap_vld <= ap_const_logic_1;
        else 
            out_array_8_10_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    out_array_9_10_out <= out_array_1_27_fu_196;

    out_array_9_10_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln34_fu_616_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln34_fu_616_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_array_9_10_out_ap_vld <= ap_const_logic_1;
        else 
            out_array_9_10_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    select_ln39_10_fu_750_p3 <= 
        out_array_26_8_reload when (icmp_ln39_18_fu_692_p2(0) = '1') else 
        out_array_25_8_reload;
    select_ln39_11_fu_764_p3 <= 
        out_array_24_8_reload when (icmp_ln39_16_fu_680_p2(0) = '1') else 
        out_array_23_8_reload;
    select_ln39_12_fu_778_p3 <= 
        out_array_22_8_reload when (icmp_ln39_14_fu_668_p2(0) = '1') else 
        out_array_21_8_reload;
    select_ln39_13_fu_792_p3 <= 
        out_array_20_8_reload when (icmp_ln39_12_fu_656_p2(0) = '1') else 
        out_array_19_8_reload;
    select_ln39_14_fu_806_p3 <= 
        out_array_18_8_reload when (icmp_ln39_10_fu_644_p2(0) = '1') else 
        out_array_17_8_reload;
    select_ln39_15_fu_820_p3 <= 
        out_array_16_8_reload when (icmp_ln39_fu_632_p2(0) = '1') else 
        out_array_31_8_reload;
    select_ln39_16_fu_828_p3 <= 
        select_ln39_fu_722_p3 when (or_ln39_fu_730_p2(0) = '1') else 
        select_ln39_9_fu_736_p3;
    select_ln39_17_fu_842_p3 <= 
        select_ln39_10_fu_750_p3 when (or_ln39_5_fu_758_p2(0) = '1') else 
        select_ln39_11_fu_764_p3;
    select_ln39_18_fu_856_p3 <= 
        select_ln39_12_fu_778_p3 when (or_ln39_7_fu_786_p2(0) = '1') else 
        select_ln39_13_fu_792_p3;
    select_ln39_19_fu_870_p3 <= 
        select_ln39_14_fu_806_p3 when (or_ln39_9_fu_814_p2(0) = '1') else 
        select_ln39_15_fu_820_p3;
    select_ln39_20_fu_878_p3 <= 
        select_ln39_16_fu_828_p3 when (or_ln39_10_fu_836_p2(0) = '1') else 
        select_ln39_17_fu_842_p3;
    select_ln39_21_fu_892_p3 <= 
        select_ln39_18_fu_856_p3 when (or_ln39_12_fu_864_p2(0) = '1') else 
        select_ln39_19_fu_870_p3;
    select_ln39_9_fu_736_p3 <= 
        out_array_28_8_reload when (icmp_ln39_20_fu_704_p2(0) = '1') else 
        out_array_27_8_reload;
    select_ln39_fu_722_p3 <= 
        out_array_30_8_reload when (icmp_ln39_22_fu_716_p2(0) = '1') else 
        out_array_29_8_reload;
    tem2_fu_900_p3 <= 
        select_ln39_20_fu_878_p3 when (or_ln39_13_fu_886_p2(0) = '1') else 
        select_ln39_21_fu_892_p3;
    trunc_ln38_fu_628_p1 <= ap_sig_allocacmp_i_4(4 - 1 downto 0);
end behav;
