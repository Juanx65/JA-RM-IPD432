-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity eucHW_RC is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    A : IN STD_LOGIC_VECTOR (63 downto 0);
    B : IN STD_LOGIC_VECTOR (63 downto 0);
    C : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_ap_vld : OUT STD_LOGIC );
end;


architecture behav of eucHW_RC is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "eucHW_RC_eucHW_RC,hls_ip_2021_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a12ti-csg325-1L,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.078750,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1574,HLS_SYN_LUT=2434,HLS_VERSION=2021_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (15 downto 0) := "0000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (15 downto 0) := "0000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (15 downto 0) := "0000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (15 downto 0) := "0000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (15 downto 0) := "0001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (15 downto 0) := "0010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (15 downto 0) := "0100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv28_0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000000";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv28_4 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv27_0 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    constant ap_const_lv28_1 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal sub_ln14_fu_521_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln14_reg_1042 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln14_1_fu_555_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln14_1_reg_1047 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln14_2_fu_589_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln14_2_reg_1052 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln14_3_fu_623_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln14_3_reg_1057 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln14_4_fu_657_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln14_4_reg_1062 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln14_5_fu_691_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln14_5_reg_1067 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln14_6_fu_725_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln14_6_reg_1072 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln14_7_fu_759_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln14_7_reg_1077 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln14_5_fu_805_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal sext_ln14_7_fu_818_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln14_9_fu_831_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln14_11_fu_844_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln14_13_fu_857_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln14_15_fu_870_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln32_fu_904_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln32_reg_1118 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln27_fu_898_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xf_V_fu_914_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xf_V_reg_1123 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln30_fu_925_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln30_reg_1131 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal trunc_ln32_1_fu_931_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln32_1_reg_1136 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln30_fu_920_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_array_2_3_fu_976_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_sqrt_fixed_32_32_s_fu_491_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal out_array_7_0_reg_145 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_array_6_0_reg_155 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_array_5_0_reg_165 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_array_4_0_reg_175 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_array_3_0_reg_185 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_array_2_0_reg_195 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_array_7_18_reg_205 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal out_array_6_17_reg_217 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_array_5_16_reg_229 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_array_4_15_reg_241 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_array_3_14_reg_253 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_array_2_13_reg_265 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_reg_277 : STD_LOGIC_VECTOR (27 downto 0);
    signal phi_ln32_reg_288 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln32_fu_935_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal out_array_7_2_reg_311 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_array_6_2_reg_341 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_array_5_2_reg_371 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_array_4_2_reg_401 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_array_3_2_reg_431 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_array_2_2_reg_461 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal idx_fu_106 : STD_LOGIC_VECTOR (27 downto 0);
    signal idx_3_fu_940_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal out_array_7_1_fu_110 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln14_1_fu_779_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_array_7_3_fu_114 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln14_3_fu_792_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_array_7_4_fu_118 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_array_7_5_fu_122 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal trunc_ln14_fu_505_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln14_1_fu_513_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln14_fu_509_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln14_1_fu_517_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_s_fu_527_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_fu_541_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln14_4_fu_537_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln14_5_fu_551_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_16_fu_561_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_17_fu_575_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln14_6_fu_571_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln14_7_fu_585_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_18_fu_595_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_19_fu_609_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln14_8_fu_605_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln14_9_fu_619_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_20_fu_629_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_21_fu_643_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln14_10_fu_639_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln14_11_fu_653_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_22_fu_663_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_23_fu_677_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln14_12_fu_673_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln14_13_fu_687_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_24_fu_697_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_25_fu_711_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln14_14_fu_707_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln14_15_fu_721_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln14_s_fu_731_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln14_2_fu_745_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln14_2_fu_741_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln14_3_fu_755_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal out_array_0_fu_773_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln14_fu_770_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal out_array_0_fu_773_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal out_array_0_fu_773_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal out_array_1_fu_786_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln14_2_fu_783_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal out_array_1_fu_786_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal out_array_1_fu_786_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal out_array_2_fu_799_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln14_4_fu_796_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal out_array_2_fu_799_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal out_array_2_fu_799_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal out_array_3_fu_812_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln14_6_fu_809_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal out_array_3_fu_812_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal out_array_3_fu_812_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal out_array_4_fu_825_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln14_8_fu_822_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal out_array_4_fu_825_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal out_array_4_fu_825_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal out_array_5_fu_838_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln14_10_fu_835_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal out_array_5_fu_838_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal out_array_5_fu_838_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal out_array_6_fu_851_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln14_12_fu_848_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal out_array_6_fu_851_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal out_array_6_fu_851_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal out_array_7_fu_864_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln14_14_fu_861_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal out_array_7_fu_864_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal out_array_7_fu_864_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_496_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_fu_955_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_condition_639 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component eucHW_RC_sqrt_fixed_32_32_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        x : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component eucHW_RC_mul_9s_9s_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component eucHW_RC_mux_83_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_sqrt_fixed_32_32_s_fu_491 : component eucHW_RC_sqrt_fixed_32_32_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        x => xf_V_reg_1123,
        ap_return => grp_sqrt_fixed_32_32_s_fu_491_ap_return);

    mul_9s_9s_18_1_1_U2 : component eucHW_RC_mul_9s_9s_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 9,
        dout_WIDTH => 18)
    port map (
        din0 => out_array_0_fu_773_p0,
        din1 => out_array_0_fu_773_p1,
        dout => out_array_0_fu_773_p2);

    mul_9s_9s_18_1_1_U3 : component eucHW_RC_mul_9s_9s_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 9,
        dout_WIDTH => 18)
    port map (
        din0 => out_array_1_fu_786_p0,
        din1 => out_array_1_fu_786_p1,
        dout => out_array_1_fu_786_p2);

    mul_9s_9s_18_1_1_U4 : component eucHW_RC_mul_9s_9s_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 9,
        dout_WIDTH => 18)
    port map (
        din0 => out_array_2_fu_799_p0,
        din1 => out_array_2_fu_799_p1,
        dout => out_array_2_fu_799_p2);

    mul_9s_9s_18_1_1_U5 : component eucHW_RC_mul_9s_9s_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 9,
        dout_WIDTH => 18)
    port map (
        din0 => out_array_3_fu_812_p0,
        din1 => out_array_3_fu_812_p1,
        dout => out_array_3_fu_812_p2);

    mul_9s_9s_18_1_1_U6 : component eucHW_RC_mul_9s_9s_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 9,
        dout_WIDTH => 18)
    port map (
        din0 => out_array_4_fu_825_p0,
        din1 => out_array_4_fu_825_p1,
        dout => out_array_4_fu_825_p2);

    mul_9s_9s_18_1_1_U7 : component eucHW_RC_mul_9s_9s_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 9,
        dout_WIDTH => 18)
    port map (
        din0 => out_array_5_fu_838_p0,
        din1 => out_array_5_fu_838_p1,
        dout => out_array_5_fu_838_p2);

    mul_9s_9s_18_1_1_U8 : component eucHW_RC_mul_9s_9s_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 9,
        dout_WIDTH => 18)
    port map (
        din0 => out_array_6_fu_851_p0,
        din1 => out_array_6_fu_851_p1,
        dout => out_array_6_fu_851_p2);

    mul_9s_9s_18_1_1_U9 : component eucHW_RC_mul_9s_9s_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 9,
        dout_WIDTH => 18)
    port map (
        din0 => out_array_7_fu_864_p0,
        din1 => out_array_7_fu_864_p1,
        dout => out_array_7_fu_864_p2);

    mux_83_32_1_1_U10 : component eucHW_RC_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => out_array_7_4_fu_118,
        din1 => out_array_7_5_fu_122,
        din2 => out_array_2_13_reg_265,
        din3 => out_array_3_14_reg_253,
        din4 => out_array_4_15_reg_241,
        din5 => out_array_5_16_reg_229,
        din6 => out_array_6_17_reg_217,
        din7 => out_array_7_18_reg_205,
        din8 => trunc_ln32_1_reg_1136,
        dout => tmp_fu_955_p10);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    i_reg_277_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                i_reg_277 <= add_ln30_reg_1131;
            elsif (((icmp_ln27_fu_898_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i_reg_277 <= ap_const_lv28_0;
            end if; 
        end if;
    end process;

    idx_fu_106_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                idx_fu_106(0) <= '0';
                idx_fu_106(1) <= '0';
                idx_fu_106(2) <= '1';
            elsif (((icmp_ln30_fu_920_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                                idx_fu_106(2 downto 0) <= idx_3_fu_940_p1(2 downto 0);
            end if; 
        end if;
    end process;

    out_array_2_0_reg_195_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln30_fu_920_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                out_array_2_0_reg_195 <= out_array_2_13_reg_265;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                out_array_2_0_reg_195 <= sext_ln14_5_fu_805_p1;
            end if; 
        end if;
    end process;

    out_array_2_13_reg_265_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                out_array_2_13_reg_265 <= out_array_2_2_reg_461;
            elsif (((icmp_ln27_fu_898_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                out_array_2_13_reg_265 <= out_array_2_0_reg_195;
            end if; 
        end if;
    end process;

    out_array_2_2_reg_461_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln32_1_reg_1136 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                out_array_2_2_reg_461 <= out_array_2_3_fu_976_p2;
            elsif ((((trunc_ln32_1_reg_1136 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((trunc_ln32_1_reg_1136 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((trunc_ln32_1_reg_1136 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((trunc_ln32_1_reg_1136 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((trunc_ln32_1_reg_1136 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((trunc_ln32_1_reg_1136 = ap_const_lv3_6) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((trunc_ln32_1_reg_1136 = ap_const_lv3_7) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
                out_array_2_2_reg_461 <= out_array_2_13_reg_265;
            end if; 
        end if;
    end process;

    out_array_3_0_reg_185_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln30_fu_920_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                out_array_3_0_reg_185 <= out_array_3_14_reg_253;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                out_array_3_0_reg_185 <= sext_ln14_7_fu_818_p1;
            end if; 
        end if;
    end process;

    out_array_3_14_reg_253_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                out_array_3_14_reg_253 <= out_array_3_2_reg_431;
            elsif (((icmp_ln27_fu_898_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                out_array_3_14_reg_253 <= out_array_3_0_reg_185;
            end if; 
        end if;
    end process;

    out_array_3_2_reg_431_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln32_1_reg_1136 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                out_array_3_2_reg_431 <= out_array_2_3_fu_976_p2;
            elsif ((((trunc_ln32_1_reg_1136 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((trunc_ln32_1_reg_1136 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((trunc_ln32_1_reg_1136 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((trunc_ln32_1_reg_1136 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((trunc_ln32_1_reg_1136 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((trunc_ln32_1_reg_1136 = ap_const_lv3_6) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((trunc_ln32_1_reg_1136 = ap_const_lv3_7) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
                out_array_3_2_reg_431 <= out_array_3_14_reg_253;
            end if; 
        end if;
    end process;

    out_array_4_0_reg_175_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln30_fu_920_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                out_array_4_0_reg_175 <= out_array_4_15_reg_241;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                out_array_4_0_reg_175 <= sext_ln14_9_fu_831_p1;
            end if; 
        end if;
    end process;

    out_array_4_15_reg_241_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                out_array_4_15_reg_241 <= out_array_4_2_reg_401;
            elsif (((icmp_ln27_fu_898_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                out_array_4_15_reg_241 <= out_array_4_0_reg_175;
            end if; 
        end if;
    end process;

    out_array_4_2_reg_401_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln32_1_reg_1136 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                out_array_4_2_reg_401 <= out_array_2_3_fu_976_p2;
            elsif ((((trunc_ln32_1_reg_1136 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((trunc_ln32_1_reg_1136 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((trunc_ln32_1_reg_1136 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((trunc_ln32_1_reg_1136 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((trunc_ln32_1_reg_1136 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((trunc_ln32_1_reg_1136 = ap_const_lv3_6) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((trunc_ln32_1_reg_1136 = ap_const_lv3_7) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
                out_array_4_2_reg_401 <= out_array_4_15_reg_241;
            end if; 
        end if;
    end process;

    out_array_5_0_reg_165_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln30_fu_920_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                out_array_5_0_reg_165 <= out_array_5_16_reg_229;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                out_array_5_0_reg_165 <= sext_ln14_11_fu_844_p1;
            end if; 
        end if;
    end process;

    out_array_5_16_reg_229_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                out_array_5_16_reg_229 <= out_array_5_2_reg_371;
            elsif (((icmp_ln27_fu_898_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                out_array_5_16_reg_229 <= out_array_5_0_reg_165;
            end if; 
        end if;
    end process;

    out_array_5_2_reg_371_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln32_1_reg_1136 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                out_array_5_2_reg_371 <= out_array_2_3_fu_976_p2;
            elsif ((((trunc_ln32_1_reg_1136 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((trunc_ln32_1_reg_1136 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((trunc_ln32_1_reg_1136 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((trunc_ln32_1_reg_1136 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((trunc_ln32_1_reg_1136 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((trunc_ln32_1_reg_1136 = ap_const_lv3_6) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((trunc_ln32_1_reg_1136 = ap_const_lv3_7) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
                out_array_5_2_reg_371 <= out_array_5_16_reg_229;
            end if; 
        end if;
    end process;

    out_array_6_0_reg_155_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln30_fu_920_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                out_array_6_0_reg_155 <= out_array_6_17_reg_217;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                out_array_6_0_reg_155 <= sext_ln14_13_fu_857_p1;
            end if; 
        end if;
    end process;

    out_array_6_17_reg_217_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                out_array_6_17_reg_217 <= out_array_6_2_reg_341;
            elsif (((icmp_ln27_fu_898_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                out_array_6_17_reg_217 <= out_array_6_0_reg_155;
            end if; 
        end if;
    end process;

    out_array_6_2_reg_341_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((trunc_ln32_1_reg_1136 = ap_const_lv3_6) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                out_array_6_2_reg_341 <= out_array_2_3_fu_976_p2;
            elsif ((((trunc_ln32_1_reg_1136 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((trunc_ln32_1_reg_1136 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((trunc_ln32_1_reg_1136 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((trunc_ln32_1_reg_1136 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((trunc_ln32_1_reg_1136 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((trunc_ln32_1_reg_1136 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((trunc_ln32_1_reg_1136 = ap_const_lv3_7) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
                out_array_6_2_reg_341 <= out_array_6_17_reg_217;
            end if; 
        end if;
    end process;

    out_array_7_0_reg_145_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln30_fu_920_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                out_array_7_0_reg_145 <= out_array_7_18_reg_205;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                out_array_7_0_reg_145 <= sext_ln14_15_fu_870_p1;
            end if; 
        end if;
    end process;

    out_array_7_18_reg_205_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                out_array_7_18_reg_205 <= out_array_7_2_reg_311;
            elsif (((icmp_ln27_fu_898_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                out_array_7_18_reg_205 <= out_array_7_0_reg_145;
            end if; 
        end if;
    end process;

    out_array_7_1_fu_110_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                out_array_7_1_fu_110 <= sext_ln14_1_fu_779_p1;
            elsif (((trunc_ln32_1_reg_1136 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                out_array_7_1_fu_110 <= out_array_2_3_fu_976_p2;
            end if; 
        end if;
    end process;

    out_array_7_2_reg_311_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((trunc_ln32_1_reg_1136 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((trunc_ln32_1_reg_1136 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((trunc_ln32_1_reg_1136 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((trunc_ln32_1_reg_1136 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((trunc_ln32_1_reg_1136 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((trunc_ln32_1_reg_1136 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((trunc_ln32_1_reg_1136 = ap_const_lv3_6) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
                out_array_7_2_reg_311 <= out_array_7_18_reg_205;
            elsif (((trunc_ln32_1_reg_1136 = ap_const_lv3_7) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                out_array_7_2_reg_311 <= out_array_2_3_fu_976_p2;
            end if; 
        end if;
    end process;

    out_array_7_3_fu_114_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                out_array_7_3_fu_114 <= sext_ln14_3_fu_792_p1;
            elsif (((trunc_ln32_1_reg_1136 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                out_array_7_3_fu_114 <= out_array_2_3_fu_976_p2;
            end if; 
        end if;
    end process;

    out_array_7_4_fu_118_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                out_array_7_4_fu_118 <= sext_ln14_1_fu_779_p1;
            elsif (((trunc_ln32_1_reg_1136 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                out_array_7_4_fu_118 <= out_array_2_3_fu_976_p2;
            end if; 
        end if;
    end process;

    out_array_7_5_fu_122_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                out_array_7_5_fu_122 <= sext_ln14_3_fu_792_p1;
            elsif (((trunc_ln32_1_reg_1136 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                out_array_7_5_fu_122 <= out_array_2_3_fu_976_p2;
            end if; 
        end if;
    end process;

    phi_ln32_reg_288_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln30_fu_920_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                if ((ap_const_lv3_2 = add_ln32_fu_935_p2)) then 
                    phi_ln32_reg_288 <= out_array_2_13_reg_265;
                elsif ((ap_const_boolean_1 = ap_condition_639)) then 
                    phi_ln32_reg_288 <= out_array_7_18_reg_205;
                elsif ((ap_const_lv3_6 = add_ln32_fu_935_p2)) then 
                    phi_ln32_reg_288 <= out_array_6_17_reg_217;
                elsif ((ap_const_lv3_5 = add_ln32_fu_935_p2)) then 
                    phi_ln32_reg_288 <= out_array_5_16_reg_229;
                elsif ((ap_const_lv3_4 = add_ln32_fu_935_p2)) then 
                    phi_ln32_reg_288 <= out_array_4_15_reg_241;
                elsif ((ap_const_lv3_3 = add_ln32_fu_935_p2)) then 
                    phi_ln32_reg_288 <= out_array_3_14_reg_253;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                add_ln30_reg_1131 <= add_ln30_fu_925_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                sub_ln14_1_reg_1047 <= sub_ln14_1_fu_555_p2;
                sub_ln14_2_reg_1052 <= sub_ln14_2_fu_589_p2;
                sub_ln14_3_reg_1057 <= sub_ln14_3_fu_623_p2;
                sub_ln14_4_reg_1062 <= sub_ln14_4_fu_657_p2;
                sub_ln14_5_reg_1067 <= sub_ln14_5_fu_691_p2;
                sub_ln14_6_reg_1072 <= sub_ln14_6_fu_725_p2;
                sub_ln14_7_reg_1077 <= sub_ln14_7_fu_759_p2;
                sub_ln14_reg_1042 <= sub_ln14_fu_521_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln30_fu_920_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                trunc_ln32_1_reg_1136 <= trunc_ln32_1_fu_931_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln27_fu_898_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                trunc_ln32_reg_1118 <= trunc_ln32_fu_904_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln27_fu_898_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                xf_V_reg_1123 <= xf_V_fu_914_p2;
            end if;
        end if;
    end process;
    idx_fu_106(27 downto 3) <= "0000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state3, icmp_ln27_fu_898_p2, ap_CS_fsm_state4, icmp_ln30_fu_920_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln27_fu_898_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state4 => 
                if (((icmp_ln30_fu_920_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXX";
        end case;
    end process;
    C <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_sqrt_fixed_32_32_s_fu_491_ap_return),32));

    C_ap_vld_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            C_ap_vld <= ap_const_logic_1;
        else 
            C_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add_ln30_fu_925_p2 <= std_logic_vector(unsigned(i_reg_277) + unsigned(ap_const_lv28_1));
    add_ln32_fu_935_p2 <= std_logic_vector(unsigned(trunc_ln32_1_fu_931_p1) + unsigned(trunc_ln32_reg_1118));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_condition_639_assign_proc : process(add_ln32_fu_935_p2)
    begin
                ap_condition_639 <= (not((ap_const_lv3_2 = add_ln32_fu_935_p2)) and not((ap_const_lv3_6 = add_ln32_fu_935_p2)) and not((ap_const_lv3_5 = add_ln32_fu_935_p2)) and not((ap_const_lv3_4 = add_ln32_fu_935_p2)) and not((ap_const_lv3_3 = add_ln32_fu_935_p2)));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_496_p4 <= idx_fu_106(27 downto 1);
    icmp_ln27_fu_898_p2 <= "1" when (grp_fu_496_p4 = ap_const_lv27_0) else "0";
    icmp_ln30_fu_920_p2 <= "1" when (i_reg_277 = idx_fu_106) else "0";
    idx_3_fu_940_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_496_p4),28));
    out_array_0_fu_773_p0 <= sext_ln14_fu_770_p1(9 - 1 downto 0);
    out_array_0_fu_773_p1 <= sext_ln14_fu_770_p1(9 - 1 downto 0);
    out_array_1_fu_786_p0 <= sext_ln14_2_fu_783_p1(9 - 1 downto 0);
    out_array_1_fu_786_p1 <= sext_ln14_2_fu_783_p1(9 - 1 downto 0);
    out_array_2_3_fu_976_p2 <= std_logic_vector(unsigned(tmp_fu_955_p10) + unsigned(phi_ln32_reg_288));
    out_array_2_fu_799_p0 <= sext_ln14_4_fu_796_p1(9 - 1 downto 0);
    out_array_2_fu_799_p1 <= sext_ln14_4_fu_796_p1(9 - 1 downto 0);
    out_array_3_fu_812_p0 <= sext_ln14_6_fu_809_p1(9 - 1 downto 0);
    out_array_3_fu_812_p1 <= sext_ln14_6_fu_809_p1(9 - 1 downto 0);
    out_array_4_fu_825_p0 <= sext_ln14_8_fu_822_p1(9 - 1 downto 0);
    out_array_4_fu_825_p1 <= sext_ln14_8_fu_822_p1(9 - 1 downto 0);
    out_array_5_fu_838_p0 <= sext_ln14_10_fu_835_p1(9 - 1 downto 0);
    out_array_5_fu_838_p1 <= sext_ln14_10_fu_835_p1(9 - 1 downto 0);
    out_array_6_fu_851_p0 <= sext_ln14_12_fu_848_p1(9 - 1 downto 0);
    out_array_6_fu_851_p1 <= sext_ln14_12_fu_848_p1(9 - 1 downto 0);
    out_array_7_fu_864_p0 <= sext_ln14_14_fu_861_p1(9 - 1 downto 0);
    out_array_7_fu_864_p1 <= sext_ln14_14_fu_861_p1(9 - 1 downto 0);
        sext_ln14_10_fu_835_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln14_5_reg_1067),18));

        sext_ln14_11_fu_844_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(out_array_5_fu_838_p2),32));

        sext_ln14_12_fu_848_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln14_6_reg_1072),18));

        sext_ln14_13_fu_857_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(out_array_6_fu_851_p2),32));

        sext_ln14_14_fu_861_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln14_7_reg_1077),18));

        sext_ln14_15_fu_870_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(out_array_7_fu_864_p2),32));

        sext_ln14_1_fu_779_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(out_array_0_fu_773_p2),32));

        sext_ln14_2_fu_783_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln14_1_reg_1047),18));

        sext_ln14_3_fu_792_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(out_array_1_fu_786_p2),32));

        sext_ln14_4_fu_796_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln14_2_reg_1052),18));

        sext_ln14_5_fu_805_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(out_array_2_fu_799_p2),32));

        sext_ln14_6_fu_809_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln14_3_reg_1057),18));

        sext_ln14_7_fu_818_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(out_array_3_fu_812_p2),32));

        sext_ln14_8_fu_822_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln14_4_reg_1062),18));

        sext_ln14_9_fu_831_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(out_array_4_fu_825_p2),32));

        sext_ln14_fu_770_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln14_reg_1042),18));

    sub_ln14_1_fu_555_p2 <= std_logic_vector(unsigned(zext_ln14_4_fu_537_p1) - unsigned(zext_ln14_5_fu_551_p1));
    sub_ln14_2_fu_589_p2 <= std_logic_vector(unsigned(zext_ln14_6_fu_571_p1) - unsigned(zext_ln14_7_fu_585_p1));
    sub_ln14_3_fu_623_p2 <= std_logic_vector(unsigned(zext_ln14_8_fu_605_p1) - unsigned(zext_ln14_9_fu_619_p1));
    sub_ln14_4_fu_657_p2 <= std_logic_vector(unsigned(zext_ln14_10_fu_639_p1) - unsigned(zext_ln14_11_fu_653_p1));
    sub_ln14_5_fu_691_p2 <= std_logic_vector(unsigned(zext_ln14_12_fu_673_p1) - unsigned(zext_ln14_13_fu_687_p1));
    sub_ln14_6_fu_725_p2 <= std_logic_vector(unsigned(zext_ln14_14_fu_707_p1) - unsigned(zext_ln14_15_fu_721_p1));
    sub_ln14_7_fu_759_p2 <= std_logic_vector(unsigned(zext_ln14_2_fu_741_p1) - unsigned(zext_ln14_3_fu_755_p1));
    sub_ln14_fu_521_p2 <= std_logic_vector(unsigned(zext_ln14_fu_509_p1) - unsigned(zext_ln14_1_fu_517_p1));
    tmp_15_fu_541_p4 <= B(15 downto 8);
    tmp_16_fu_561_p4 <= A(23 downto 16);
    tmp_17_fu_575_p4 <= B(23 downto 16);
    tmp_18_fu_595_p4 <= A(31 downto 24);
    tmp_19_fu_609_p4 <= B(31 downto 24);
    tmp_20_fu_629_p4 <= A(39 downto 32);
    tmp_21_fu_643_p4 <= B(39 downto 32);
    tmp_22_fu_663_p4 <= A(47 downto 40);
    tmp_23_fu_677_p4 <= B(47 downto 40);
    tmp_24_fu_697_p4 <= A(55 downto 48);
    tmp_25_fu_711_p4 <= B(55 downto 48);
    tmp_s_fu_527_p4 <= A(15 downto 8);
    trunc_ln14_1_fu_513_p1 <= B(8 - 1 downto 0);
    trunc_ln14_2_fu_745_p4 <= B(63 downto 56);
    trunc_ln14_fu_505_p1 <= A(8 - 1 downto 0);
    trunc_ln14_s_fu_731_p4 <= A(63 downto 56);
    trunc_ln32_1_fu_931_p1 <= i_reg_277(3 - 1 downto 0);
    trunc_ln32_fu_904_p1 <= idx_fu_106(3 - 1 downto 0);
    xf_V_fu_914_p2 <= std_logic_vector(unsigned(out_array_7_3_fu_114) + unsigned(out_array_7_1_fu_110));
    zext_ln14_10_fu_639_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_20_fu_629_p4),9));
    zext_ln14_11_fu_653_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_21_fu_643_p4),9));
    zext_ln14_12_fu_673_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_22_fu_663_p4),9));
    zext_ln14_13_fu_687_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_23_fu_677_p4),9));
    zext_ln14_14_fu_707_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_24_fu_697_p4),9));
    zext_ln14_15_fu_721_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_25_fu_711_p4),9));
    zext_ln14_1_fu_517_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln14_1_fu_513_p1),9));
    zext_ln14_2_fu_741_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln14_s_fu_731_p4),9));
    zext_ln14_3_fu_755_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln14_2_fu_745_p4),9));
    zext_ln14_4_fu_537_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_527_p4),9));
    zext_ln14_5_fu_551_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_15_fu_541_p4),9));
    zext_ln14_6_fu_571_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_16_fu_561_p4),9));
    zext_ln14_7_fu_585_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_17_fu_575_p4),9));
    zext_ln14_8_fu_605_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_18_fu_595_p4),9));
    zext_ln14_9_fu_619_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_19_fu_609_p4),9));
    zext_ln14_fu_509_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln14_fu_505_p1),9));
end behav;
